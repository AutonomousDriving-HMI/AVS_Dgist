{"version":3,"sources":["../../../src/metric-card/metric-chart.js"],"names":["React","PureComponent","PropTypes","findNearestValue","Chart","MetricChart","constructor","props","evt","onClick","state","hoveredX","key","value","hoveredValues","setState","isHovered","getX","onNearestX","onMouseLeave","currentValues","_getCurrentValues","UNSAFE_componentWillReceiveProps","nextProps","highlightX","data","Number","isFinite","result","hasOwnProperty","render","_onClick","_onNearestX","_onMouseLeave","Object","assign","number","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {findNearestValue} from './utils';\nimport Chart from './chart';\n\n/**\n * A metric chart draws a chart with optional percentiles and lags\n */\nexport default class MetricChart extends PureComponent {\n  static propTypes = Object.assign(\n    {\n      highlightX: PropTypes.number\n    },\n    Chart.propTypes\n  );\n\n  static defaultProps = Chart.defaultProps;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isHovered: false,\n      hoveredX: null,\n      // The nearest data point to the cursor in each series\n      hoveredValues: {},\n      // The nearest data point to the current time in each series\n      currentValues: this._getCurrentValues(props)\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.highlightX !== nextProps.highlightX || this.props.data !== nextProps.data) {\n      this.setState({\n        currentValues: this._getCurrentValues(nextProps)\n      });\n    }\n  }\n\n  // Find the closest data point in each series to the current time\n  _getCurrentValues({highlightX, data, getX}) {\n    if (!Number.isFinite(highlightX) || !data) {\n      return null;\n    }\n\n    const result = {};\n    for (const key in data) {\n      if (data.hasOwnProperty(key)) {\n        result[key] = findNearestValue(data[key], highlightX, getX);\n      }\n    }\n    return result;\n  }\n\n  _onClick = evt => {\n    this.props.onClick(this.state.hoveredX, evt);\n  };\n\n  _onNearestX = (key, value, evt) => {\n    const {hoveredValues} = this.state;\n    hoveredValues[key] = value;\n\n    this.setState({\n      isHovered: true,\n      hoveredX: this.props.getX(value),\n      hoveredValues: {...hoveredValues}\n    });\n\n    this.props.onNearestX(key, value, evt);\n  };\n\n  _onMouseLeave = evt => {\n    this.setState({isHovered: false, hoveredX: null});\n    this.props.onMouseLeave(evt);\n  };\n\n  render() {\n    const {isHovered, hoveredValues, currentValues} = this.state;\n\n    return (\n      <Chart\n        {...this.props}\n        onClick={this._onClick}\n        onNearestX={this._onNearestX}\n        onMouseLeave={this._onMouseLeave}\n        highlightValues={isHovered ? hoveredValues : currentValues}\n      />\n    );\n  }\n}\n"],"file":"metric-chart.js"}