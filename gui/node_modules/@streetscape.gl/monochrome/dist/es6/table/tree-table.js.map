{"version":3,"sources":["../../../src/table/tree-table.js"],"names":["React","PropTypes","withTheme","Table","TreeTableRow","TreeTable","constructor","props","id","state","expanded","rootId","rows","rootRowIndex","findIndex","row","_cache","clear","_list","recomputeRowHeights","_renderRow","key","index","style","indentSize","renderCell","theme","userStyle","_isRowExpanded","_toggleRowExpansion","columns","propTypes","number","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,SAAR,QAAwB,iBAAxB;AAEA,SAAQC,KAAR,QAAoB,SAApB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;AAEA,MAAMC,SAAN,SAAwBF,KAAxB,CAA8B;AAW5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,4CAMFC,EAAE,IAAI;AACrB,aAAO,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,EAApB,CAAP;AACD,KARkB;;AAAA,iDAUG,CAACA,EAAD,EAAKG,MAAL,KAAgB;AAAA,0BACX,KAAKF,KADM;AAAA,YAC7BC,QAD6B,eAC7BA,QAD6B;AAAA,YACnBE,IADmB,eACnBA,IADmB;AAGpCF,MAAAA,QAAQ,CAACF,EAAD,CAAR,GAAe,CAACE,QAAQ,CAACF,EAAD,CAAxB;AAEA,YAAMK,YAAY,GAAGD,IAAI,CAACE,SAAL,CAAeC,GAAG,IAAIA,GAAG,CAACP,EAAJ,KAAWG,MAAjC,CAArB;;AAEA,WAAKK,MAAL,CAAYC,KAAZ,CAAkBJ,YAAlB;;AACA,WAAKK,KAAL,CAAWC,mBAAX,CAA+BN,YAA/B;AACD,KAnBkB;;AAGjB,SAAKJ,KAAL,CAAWC,QAAX,GAAsB,EAAtB;AACD;;AAiBDU,EAAAA,UAAU,OAAsB;AAAA,QAApBC,GAAoB,QAApBA,GAAoB;AAAA,QAAfC,KAAe,QAAfA,KAAe;AAAA,QAARC,KAAQ,QAARA,KAAQ;AAAA,wBAC4B,KAAKhB,KADjC;AAAA,UACvBiB,UADuB,eACvBA,UADuB;AAAA,UACXC,UADW,eACXA,UADW;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACeC,SADf,eACQJ,KADR;AAE9B,UAAMR,GAAG,GAAG,KAAKN,KAAL,CAAWG,IAAX,CAAgBU,KAAhB,CAAZ;AAEA,WACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAED,GADP;AAEE,MAAA,EAAE,EAAEN,GAAG,CAACP,EAFV;AAGE,MAAA,KAAK,EAAEc,KAHT;AAIE,MAAA,IAAI,EAAEP,GAJR;AAKE,MAAA,KAAK,EAAEQ,KALT;AAME,MAAA,KAAK,EAAEG,KANT;AAOE,MAAA,SAAS,EAAEC,SAPb;AAQE,MAAA,UAAU,EAAEH,UARd;AASE,MAAA,UAAU,EAAEC,UATd;AAUE,MAAA,aAAa,EAAE,KAAKG,cAVtB;AAWE,MAAA,eAAe,EAAE,KAAKC,mBAXxB;AAYE,MAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWqB;AAZtB,MADF;AAgBD;;AApD2B;;gBAAxBzB,S,iCAECF,KAAK,CAAC4B,S;AACTP,EAAAA,UAAU,EAAEvB,SAAS,CAAC+B;;;gBAHpB3B,S,oCAOCF,KAAK,CAAC8B,Y;AACTT,EAAAA,UAAU,EAAE;;;AA+ChB,eAAetB,SAAS,CAACG,SAAD,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {withTheme} from '../shared/theme';\n\nimport {Table} from './table';\nimport TreeTableRow from './tree-table-row';\n\nclass TreeTable extends Table {\n  static propTypes = {\n    ...Table.propTypes,\n    indentSize: PropTypes.number\n  };\n\n  static defaultProps = {\n    ...Table.defaultProps,\n    indentSize: 12\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state.expanded = {};\n  }\n\n  _isRowExpanded = id => {\n    return this.state.expanded[id];\n  };\n\n  _toggleRowExpansion = (id, rootId) => {\n    const {expanded, rows} = this.state;\n\n    expanded[id] = !expanded[id];\n\n    const rootRowIndex = rows.findIndex(row => row.id === rootId);\n\n    this._cache.clear(rootRowIndex);\n    this._list.recomputeRowHeights(rootRowIndex);\n  };\n\n  _renderRow({key, index, style}) {\n    const {indentSize, renderCell, theme, style: userStyle} = this.props;\n    const row = this.state.rows[index];\n\n    return (\n      <TreeTableRow\n        key={key}\n        id={row.id}\n        index={index}\n        data={row}\n        style={style}\n        theme={theme}\n        userStyle={userStyle}\n        indentSize={indentSize}\n        renderCell={renderCell}\n        getIsExpanded={this._isRowExpanded}\n        toggleExpansion={this._toggleRowExpansion}\n        columns={this.state.columns}\n      />\n    );\n  }\n}\n\nexport default withTheme(TreeTable);\n"],"file":"tree-table.js"}