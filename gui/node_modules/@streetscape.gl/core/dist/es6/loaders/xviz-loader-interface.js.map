{"version":3,"sources":["../../../src/loaders/xviz-loader-interface.js"],"names":["getXVIZConfig","clamp","getTimeSeries","createSelector","XVIZLoaderInterface","constructor","options","get","getStreamSettings","_getStreams","streamSettings","streams","result","streamName","getMetadata","metadata","start_time","TIME_WINDOW","end_time","getLogSynchronizer","getCurrentTime","getLookAhead","getStreams","logSynchronizer","timestamp","lookAhead","Number","isFinite","setTime","setLookAheadTimeOffset","getCurrentFrame","_updateTimer","listeners","forEach","o","_version","_debug","debug","callbacks","state","on","eventType","cb","push","off","index","indexOf","splice","emit","eventArgs","subscribe","instance","unsubscribe","findIndex","key","set","value","requestAnimationFrame","_update","isOpen","connect","Error","seek","startTime","getLogStartTime","endTime","getLogEndTime","setLookAhead","updateStreamSettings","settings","close","getBufferRange","getBufferStart","getBufferEnd","_setMetadata","Object","keys","length","newTimestamp"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {getXVIZConfig} from '@xviz/parser';\nimport {clamp} from 'math.gl';\n\nimport {getTimeSeries} from '../utils/metrics-helper';\nimport createSelector from '../utils/create-selector';\n\n/* eslint-disable callback-return */\nexport default class XVIZLoaderInterface {\n  constructor(options = {}) {\n    this.options = options;\n    this._debug = options.debug || (() => {});\n    this.callbacks = {};\n\n    this.listeners = [];\n    this.state = {};\n    this._version = 0;\n    this._updateTimer = null;\n  }\n\n  /* Event types:\n   * - ready\n   * - update\n   * - finish\n   * - error\n   */\n  on(eventType, cb) {\n    this.callbacks[eventType] = this.callbacks[eventType] || [];\n    this.callbacks[eventType].push(cb);\n    return this;\n  }\n\n  off(eventType, cb) {\n    const callbacks = this.callbacks[eventType];\n    if (callbacks) {\n      const index = callbacks.indexOf(cb);\n      if (index >= 0) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n\n  emit(eventType, eventArgs) {\n    const callbacks = this.callbacks[eventType];\n    if (callbacks) {\n      for (const cb of callbacks) {\n        cb(eventType, eventArgs);\n      }\n    }\n  }\n\n  subscribe(instance) {\n    this.listeners.push(instance);\n  }\n\n  unsubscribe(instance) {\n    const index = this.listeners.findIndex(o => o === instance);\n    if (index >= 0) {\n      this.listeners.splice(index, 1);\n    }\n  }\n\n  get(key) {\n    return this.state[key];\n  }\n\n  set(key, value) {\n    if (this.state[key] !== value) {\n      this.state[key] = value;\n      this._version++;\n      if (!this._updateTimer) {\n        /* global requestAnimationFrame */\n        this._updateTimer = requestAnimationFrame(this._update);\n      }\n    }\n  }\n\n  /* Connection API */\n  isOpen() {\n    return false;\n  }\n\n  connect() {\n    throw new Error('not implemented');\n  }\n\n  seek(timestamp) {\n    const metadata = this.getMetadata();\n\n    if (metadata) {\n      const startTime = this.getLogStartTime();\n      const endTime = this.getLogEndTime();\n      if (Number.isFinite(startTime) && Number.isFinite(endTime)) {\n        timestamp = clamp(timestamp, startTime, endTime);\n      }\n    }\n\n    this.set('timestamp', timestamp);\n  }\n\n  setLookAhead(lookAhead) {\n    this.set('lookAhead', lookAhead);\n  }\n\n  updateStreamSettings(settings) {\n    const streamSettings = this.get('streamSettings');\n    this.set('streamSettings', {...streamSettings, ...settings});\n  }\n\n  close() {\n    throw new Error('not implemented');\n  }\n\n  /* Data selector API */\n\n  getCurrentTime = () => this.get('timestamp');\n\n  getLookAhead = () => this.get('lookAhead');\n\n  getMetadata = () => this.get('metadata');\n\n  getStreamSettings = () => this.get('streamSettings');\n\n  getLogSynchronizer = () => this.get('logSynchronizer');\n\n  _getStreams = () => this.get('streams');\n\n  getStreams = createSelector(\n    this,\n    [this.getStreamSettings, this._getStreams],\n    (streamSettings, streams) => {\n      if (!streamSettings || !streams) {\n        return streams;\n      }\n      const result = {};\n      for (const streamName in streams) {\n        if (streamSettings[streamName]) {\n          result[streamName] = streams[streamName];\n        }\n      }\n      return result;\n    }\n  );\n\n  getBufferRange() {\n    throw new Error('not implemented');\n  }\n\n  getBufferStart() {\n    return this.getLogStartTime();\n  }\n\n  getBufferEnd() {\n    return this.getLogEndTime();\n  }\n\n  getLogStartTime = createSelector(this, this.getMetadata, metadata => {\n    return metadata && metadata.start_time && metadata.start_time + getXVIZConfig().TIME_WINDOW;\n  });\n\n  getLogEndTime = createSelector(this, this.getMetadata, metadata => {\n    return metadata && metadata.end_time;\n  });\n\n  getCurrentFrame = createSelector(\n    this,\n    [\n      this.getLogSynchronizer,\n      this.getStreamSettings,\n      this.getCurrentTime,\n      this.getLookAhead,\n      this.getStreams\n    ],\n    // `getStreams` is only needed to trigger recomputation.\n    // The logSynchronizer has access to the streamBuffer.\n    (logSynchronizer, streamSettings, timestamp, lookAhead) => {\n      if (logSynchronizer && Number.isFinite(timestamp)) {\n        logSynchronizer.setTime(timestamp);\n        logSynchronizer.setLookAheadTimeOffset(lookAhead);\n        return logSynchronizer.getCurrentFrame(streamSettings);\n      }\n      return null;\n    }\n  );\n\n  // TODO add declare ui metadata\n  getTimeSeries = createSelector(this, [this.getMetadata, this.getStreams], (metadata, streams) =>\n    getTimeSeries({metadata, streams})\n  );\n\n  /* Private actions */\n  _update = () => {\n    this._updateTimer = null;\n    this.listeners.forEach(o => o(this._version));\n  };\n\n  _setMetadata(metadata) {\n    this.set('metadata', metadata);\n    if (metadata.streams && Object.keys(metadata.streams).length > 0) {\n      this.set('streamSettings', metadata.streams);\n    }\n    const timestamp = this.get('timestamp');\n    const newTimestamp = Number.isFinite(timestamp) ? timestamp : metadata.start_time;\n    if (Number.isFinite(newTimestamp)) {\n      this.seek(newTimestamp);\n    }\n  }\n}\n"],"file":"xviz-loader-interface.js"}