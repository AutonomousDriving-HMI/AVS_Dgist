{"version":3,"sources":["../../../src/parse-file/parse-file.js"],"names":["parseFileSync","data","loaders","options","url","loader","Array","isArray","parseFile","parseFileAsIterator","inputIterator","parseIterator","iterator","Error","name","parseFileAsAsyncIterator","inputAsyncIterator","parseAsyncIterator","asyncIterator"],"mappings":";;;;;;;;;;;;;;;;AAAA;;AACA;;AAEO,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCC,OAAtC,EAA+CC,GAA/C,EAAoD;AACzD,MAAMC,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcL,OAAd,IAAyB,wCAAiBE,GAAjB,EAAsBH,IAAtB,EAA4BC,OAA5B,CAAzB,GAAgEA,OAA/E;AACA,SAAO,0CAAoBD,IAApB,EAA0BI,MAA1B,EAAkCF,OAAlC,EAA2CC,GAA3C,CAAP;AACD,C,CAED;;;SACsBI,S;;;;;;;4BAAf,iBAAyBP,IAAzB,EAA+BC,OAA/B,EAAwCC,OAAxC,EAAiDC,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQH,IADR;;AAAA;AACLA,YAAAA,IADK;AAECI,YAAAA,MAFD,GAEUC,KAAK,CAACC,OAAN,CAAcL,OAAd,IAAyB,wCAAiBE,GAAjB,EAAsBH,IAAtB,EAA4BC,OAA5B,CAAzB,GAAgEA,OAF1E;AAAA;AAAA,mBAGQ,sCAAgBD,IAAhB,EAAsBI,MAAtB,EAA8BF,OAA9B,EAAuCC,GAAvC,CAHR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMA,SAASK,mBAAT,CAA6BC,aAA7B,EAA4CR,OAA5C,EAAqDC,OAArD,EAA8DC,GAA9D,EAAmE;AACxE,MAAMC,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcL,OAAd,IAAyB,wCAAiBE,GAAjB,EAAsB,IAAtB,EAA4BF,OAA5B,CAAzB,GAAgEA,OAA/E;;AACA,MAAIG,MAAM,CAACM,aAAX,EAA0B;AACxB,QAAMC,QAAQ,GAAGP,MAAM,CAACM,aAAP,CAAqBD,aAArB,EAAoCP,OAApC,EAA6CC,GAA7C,CAAjB;;AACA,QAAIQ,QAAJ,EAAc;AACZ,aAAOA,QAAP;AACD;AACF,GAPuE,CASxE;;;AACA,QAAM,IAAIC,KAAJ,WAAaR,MAAM,CAACS,IAApB,kEAAN;AACD,C,CAED;;;SACsBC,wB;;;;;;;4BAAf,kBAAwCC,kBAAxC,EAA4Dd,OAA5D,EAAqEC,OAArE,EAA8EC,GAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACsBY,kBADtB;;AAAA;AACLA,YAAAA,kBADK;AAECX,YAAAA,MAFD,GAEUC,KAAK,CAACC,OAAN,CAAcL,OAAd,IAAyB,wCAAiBE,GAAjB,EAAsB,IAAtB,EAA4BF,OAA5B,CAAzB,GAAgEA,OAF1E;;AAAA,iBAIDG,MAAM,CAACY,kBAJN;AAAA;AAAA;AAAA;;AAKGC,YAAAA,aALH,GAKmBb,MAAM,CAACY,kBAAP,CAA0BD,kBAA1B,EAA8Cb,OAA9C,EAAuDC,GAAvD,CALnB;;AAAA,iBAMCc,aAND;AAAA;AAAA;AAAA;;AAAA,8CAOMA,aAPN;;AAAA;AAAA,kBAYC,IAAIL,KAAJ,WAAaR,MAAM,CAACS,IAApB,4DAZD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {autoDetectLoader} from './auto-detect-loader';\nimport {parseWithLoader, parseWithLoaderSync} from './parse-with-loader';\n\nexport function parseFileSync(data, loaders, options, url) {\n  const loader = Array.isArray(loaders) ? autoDetectLoader(url, data, loaders) : loaders;\n  return parseWithLoaderSync(data, loader, options, url);\n}\n\n// TODO - should accept loader.parseAsyncIterator and concatenate.\nexport async function parseFile(data, loaders, options, url) {\n  data = await data;\n  const loader = Array.isArray(loaders) ? autoDetectLoader(url, data, loaders) : loaders;\n  return await parseWithLoader(data, loader, options, url);\n}\n\nexport function parseFileAsIterator(inputIterator, loaders, options, url) {\n  const loader = Array.isArray(loaders) ? autoDetectLoader(url, null, loaders) : loaders;\n  if (loader.parseIterator) {\n    const iterator = loader.parseIterator(inputIterator, options, url);\n    if (iterator) {\n      return iterator;\n    }\n  }\n\n  // TODO - look for parseSync and pre-concatenate the iterator input\n  throw new Error(`${loader.name} loader cannot parse data source using synchronous iterators`);\n}\n\n// TODO - should accept loader.parseSync/parse and generate 1 chunk asyncIterator\nexport async function parseFileAsAsyncIterator(inputAsyncIterator, loaders, options, url) {\n  inputAsyncIterator = await inputAsyncIterator;\n  const loader = Array.isArray(loaders) ? autoDetectLoader(url, null, loaders) : loaders;\n\n  if (loader.parseAsyncIterator) {\n    const asyncIterator = loader.parseAsyncIterator(inputAsyncIterator, options, url);\n    if (asyncIterator) {\n      return asyncIterator;\n    }\n  }\n  // TODO - look for parseSyncIterator and make an async adapter\n  // TODO - look for parseAsync and pre-concatenate the async iterator input\n  throw new Error(`${loader.name} loader cannot parse data source using async iterators`);\n}\n"],"file":"parse-file.js"}