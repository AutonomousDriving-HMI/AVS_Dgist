{"version":3,"sources":["../../../src/metric-card/rich-metric-chart.js"],"names":["React","PureComponent","PropTypes","withTheme","ExpandedIcon","CollapsedIcon","CheckAltIcon","MetricChart","FilterContainer","FilterToggle","FilterItem","FilterLegend","scaleOrdinal","extent","DEFAULT_COLORS","range","MetricChartWithLegends","props","key","state","showTopSeriesOnly","dataSeries","dataVisibility","topSeriesCount","findIndex","s","setState","hoveredSeriesName","_extractDataSeries","nextProps","data","getColor","formatTitle","getY","series","value","Array","isArray","displayName","yExtent","push","color","_getColor","max","Math","abs","sort","s1","s2","theme","style","slice","filter","length","filterToggle","iconCollapsed","iconExpanded","map","styleProps","name","isHovered","isActive","_isDataVisible","filterItem","_setHoveredDataName","_toggleDataVisibility","filterLegend","iconOn","iconOff","_renderDataFilters","Object","assign","propTypes","number","defaultProps"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {withTheme} from '../shared/theme';\nimport {ExpandedIcon, CollapsedIcon, CheckAltIcon} from '../shared/icons';\nimport MetricChart from './metric-chart';\nimport {FilterContainer, FilterToggle, FilterItem, FilterLegend} from './styled-components';\n\nimport {scaleOrdinal} from 'd3-scale';\nimport {extent} from 'd3-array';\n\nconst DEFAULT_COLORS = scaleOrdinal().range([\n  '#12939A',\n  '#DDB27C',\n  '#88572C',\n  '#FF991F',\n  '#F15C17',\n  '#223F9A',\n  '#DA70BF',\n  '#125C77',\n  '#4DC19C',\n  '#776E57',\n  '#17B8BE',\n  '#F6D18A',\n  '#B7885E',\n  '#FFCB99',\n  '#F89570',\n  '#829AE3',\n  '#E79FD5',\n  '#1E96BE',\n  '#89DAC1',\n  '#B3AD9E'\n]);\n\n/**\n * A component that visualizes the multiple data series. Features:\n * Each data series is shown as a line series\n * Clicking on the legend toggles the visibility of that data series\n * Legends are sorted by prominence (maximum value in the look ahead window)\n * A show all/show less button to toggle only showing the top 5 data series by value\n */\nclass MetricChartWithLegends extends PureComponent {\n  static propTypes = Object.assign({}, MetricChart.propTypes, {\n    topSeriesCount: PropTypes.number\n  });\n\n  static defaultProps = Object.assign({}, MetricChart.defaultProps, {\n    topSeriesCount: 5,\n    getColor: DEFAULT_COLORS\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSeries: this._extractDataSeries(props),\n      dataVisibility: {},\n      showTopSeriesOnly: true,\n      hoveredSeriesName: null\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.data !== nextProps.data) {\n      this.setState({\n        dataSeries: this._extractDataSeries(nextProps)\n      });\n    }\n  }\n\n  _getColor(key) {\n    const {getColor} = this.props;\n\n    switch (typeof getColor) {\n      case 'object':\n        return getColor[key];\n\n      case 'function':\n        return getColor(key);\n\n      default:\n        return getColor;\n    }\n  }\n\n  // Extract subset of streams from all variable streams\n  // Format stream data for render\n  _extractDataSeries({data, formatTitle, getY}) {\n    const series = [];\n    for (const key in data) {\n      const value = data[key];\n      if (Array.isArray(value)) {\n        const displayName = this.props.formatTitle(key);\n        const yExtent = extent(value, getY);\n        series.push({\n          key,\n          displayName,\n          color: this._getColor(key),\n          data: value,\n          extent: yExtent,\n          max: Math.max(Math.abs(yExtent[0]), Math.abs(yExtent[1]))\n        });\n      }\n    }\n\n    // Sort data series by max value\n    series.sort((s1, s2) => s2.max - s1.max);\n\n    return series;\n  }\n\n  // Check if a certain data series is turned on by user settings\n  _isDataVisible = key => {\n    const {showTopSeriesOnly, dataSeries, dataVisibility} = this.state;\n    if (dataVisibility[key] === false) {\n      // turned of by the user\n      return false;\n    }\n    if (showTopSeriesOnly) {\n      const {topSeriesCount} = this.props;\n      return dataSeries.findIndex(s => s.key === key) < topSeriesCount;\n    }\n    return true;\n  };\n\n  _setHoveredDataName = key => {\n    this.setState({hoveredSeriesName: key});\n  };\n\n  _toggleDataVisibility = key => {\n    const {dataVisibility} = this.state;\n\n    this.setState({\n      dataVisibility: {\n        ...dataVisibility,\n        // at start, all streams have undefined which is treated as visible\n        [key]: dataVisibility[key] === false\n      }\n    });\n  };\n\n  // Legends (also as visibility toggle) of the data streams\n  _renderDataFilters() {\n    const {dataSeries, showTopSeriesOnly, hoveredSeriesName} = this.state;\n    const {theme, style, topSeriesCount} = this.props;\n\n    const series = showTopSeriesOnly ? dataSeries.slice(0, topSeriesCount) : dataSeries;\n\n    return (\n      <FilterContainer theme={theme} userStyle={style.filter} isExpanded={!showTopSeriesOnly}>\n        {dataSeries.length > topSeriesCount && (\n          <FilterToggle\n            theme={theme}\n            userStyle={style.filterToggle}\n            isExpanded={!showTopSeriesOnly}\n            onClick={() => this.setState({showTopSeriesOnly: !showTopSeriesOnly})}\n          >\n            {showTopSeriesOnly\n              ? style.iconCollapsed || <CollapsedIcon />\n              : style.iconExpanded || <ExpandedIcon />}\n          </FilterToggle>\n        )}\n\n        {series.map(s => {\n          const styleProps = {\n            theme,\n            name: s.key,\n            displayName: s.displayName,\n            color: s.color,\n            isHovered: hoveredSeriesName === s.key,\n            isActive: this._isDataVisible(s.key)\n          };\n\n          return (\n            <FilterItem\n              userStyle={style.filterItem}\n              {...styleProps}\n              key={`multiplot-${s.key}`}\n              onMouseOver={() => this._setHoveredDataName(s.key)}\n              onMouseOut={() => this._setHoveredDataName(null)}\n              onClick={() => this._toggleDataVisibility(s.key)}\n            >\n              <FilterLegend {...styleProps} userStyle={style.filterLegend}>\n                {styleProps.isActive ? style.iconOn || <CheckAltIcon /> : style.iconOff}\n              </FilterLegend>\n              <span>{s.displayName}</span>\n            </FilterItem>\n          );\n        })}\n      </FilterContainer>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <MetricChart\n          {...this.props}\n          highlightSeries={this.state.hoveredSeriesName}\n          onSeriesMouseOver={key => this._setHoveredDataName(key)}\n          onMouseLeave={() => this._setHoveredDataName(null)}\n          dataFilter={this._isDataVisible}\n        />\n        {this._renderDataFilters()}\n      </div>\n    );\n  }\n}\n\nexport default withTheme(MetricChartWithLegends);\n"],"file":"rich-metric-chart.js"}