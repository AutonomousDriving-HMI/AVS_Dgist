{"version":3,"sources":["../../../src/builders/xviz-metadata-builder.js"],"names":["_Pose","Pose","Matrix4","CATEGORY","defaultValidateWarn","console","warn","defaultValidateError","error","XVIZMetadataBuilder","constructor","validateWarn","validateError","_validateWarn","_validateError","data","streams","streamId","tmp_ui_builder","tmp_stream","tmp_matrix_transform","tmp_pose_transform","tmp_log_info","tmp_type","getMetadata","_flush","metadata","version","Object","keys","length","log_info","ui_config","getUI","startTime","time","start_time","endTime","end_time","ui","xvizUIBuilder","stream","category","type","t","source","unit","u","units","coordinate","transformMatrix","matrix","Array","pose","position","orientation","x","y","z","roll","pitch","yaw","getTransformationMatrix","streamStyle","style","stream_style","styleClass","name","streamRule","style_classes","push","logInfo","streamData","transform","primitive","future_instance","primitive_type","variable","time_series","scalar_type","_reset"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Note: XVIZ data structures use snake_case\n/* eslint-disable camelcase*/\nimport {_Pose as Pose, Matrix4} from 'math.gl';\nimport {CATEGORY} from './constant';\n\n/* global console */\n/* eslint-disable no-console */\nconst defaultValidateWarn = console.warn;\nconst defaultValidateError = console.error;\n/* eslint-enable no-console */\n\nexport default class XVIZMetadataBuilder {\n  constructor({validateWarn = defaultValidateWarn, validateError = defaultValidateError} = {}) {\n    this._validateWarn = validateWarn;\n    this._validateError = validateError;\n\n    this.data = {\n      streams: {}\n    };\n\n    this.streamId = null;\n    this.tmp_ui_builder = null;\n    this.tmp_stream = {};\n    this.tmp_matrix_transform = null;\n    this.tmp_pose_transform = null;\n    this.tmp_log_info = {};\n    this.tmp_type = null;\n    // TODO:\n    // cameras\n    // stream_aliases\n    // ui_config\n    // map_info\n    // vehicle_info\n  }\n\n  getMetadata() {\n    this._flush();\n\n    const metadata = {\n      version: '2.0.0',\n      ...this.data\n    };\n\n    if (Object.keys(this.tmp_log_info).length > 0) {\n      metadata.log_info = this.tmp_log_info;\n    }\n    if (this.tmp_ui_builder) {\n      metadata.ui_config = this.tmp_ui_builder.getUI();\n    }\n\n    return metadata;\n  }\n\n  startTime(time) {\n    this.tmp_log_info.start_time = time;\n    return this;\n  }\n\n  endTime(time) {\n    this.tmp_log_info.end_time = time;\n    return this;\n  }\n\n  ui(xvizUIBuilder) {\n    this.tmp_ui_builder = xvizUIBuilder;\n    return this;\n  }\n\n  stream(streamId) {\n    if (this.streamId) {\n      this._flush();\n    }\n\n    this.streamId = streamId;\n    return this;\n  }\n\n  // Used for validation in XVIZBuilder\n  category(category) {\n    this.tmp_stream.category = category;\n    return this;\n  }\n\n  // Used for validation in XVIZBuilder\n  type(t) {\n    this.tmp_type = t;\n    return this;\n  }\n\n  source(source) {\n    this.tmp_stream.source = source;\n    return this;\n  }\n\n  unit(u) {\n    this.tmp_stream.units = u;\n    return this;\n  }\n\n  coordinate(coordinate) {\n    this.tmp_stream.coordinate = coordinate;\n    return this;\n  }\n\n  transformMatrix(matrix) {\n    if (matrix instanceof Array) {\n      matrix = new Matrix4(matrix);\n    }\n\n    this.tmp_matrix_transform = matrix;\n    return this;\n  }\n\n  pose(position = {}, orientation = {}) {\n    const {x = 0, y = 0, z = 0} = position;\n    const {roll = 0, pitch = 0, yaw = 0} = orientation;\n    const pose = new Pose({x, y, z, roll, pitch, yaw});\n    this.tmp_pose_transform = pose.getTransformationMatrix();\n    return this;\n  }\n\n  streamStyle(style) {\n    this.tmp_stream.stream_style = style;\n    return this;\n  }\n\n  styleClass(name, style) {\n    if (!this.streamId) {\n      this._validateError('A stream must set before adding a style rule.');\n      return this;\n    }\n\n    const streamRule = {\n      name,\n      style\n    };\n\n    if (!this.tmp_stream.style_classes) {\n      this.tmp_stream.style_classes = [streamRule];\n    } else {\n      this.tmp_stream.style_classes.push(streamRule);\n    }\n    return this;\n  }\n\n  logInfo(data) {\n    this.tmp_log_info = {...data, ...this.tmp_log_info};\n    return this;\n  }\n\n  _flush() {\n    if (this.streamId) {\n      const streamData = this.tmp_stream;\n\n      let transform = null;\n      if (this.tmp_pose_transform && this.tmp_matrix_transform) {\n        this._validateError('`pose` and `transformMatrix` cannot be applied at the same time.');\n      } else {\n        transform = this.tmp_matrix_transform || this.tmp_pose_transform;\n      }\n\n      if (transform) {\n        streamData.transform = transform;\n      }\n\n      if (\n        streamData.category === CATEGORY.primitive ||\n        streamData.category === CATEGORY.future_instance\n      ) {\n        streamData.primitive_type = this.tmp_type;\n      } else if (\n        streamData.category === CATEGORY.variable ||\n        streamData.category === CATEGORY.time_series\n      ) {\n        streamData.scalar_type = this.tmp_type;\n      }\n\n      this.data.streams[this.streamId] = streamData;\n    }\n\n    this._reset();\n  }\n\n  _reset() {\n    this.streamId = null;\n    this.tmp_stream = {};\n    this.tmp_matrix_transform = null;\n    this.tmp_pose_transform = null;\n    this.tmp_type = null;\n  }\n}\n"],"file":"xviz-metadata-builder.js"}