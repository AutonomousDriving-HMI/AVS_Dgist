{"version":3,"sources":["../../../../src/layers/mesh-layer/mesh-layer.js"],"names":["fp64LowPart","fp64","RADIAN_PER_DEGREE","Math","PI","getTexture","gl","src","opts","Object","assign","urls","then","textures","catch","error","Error","Promise","resolve","getTextureFromData","data","Texture2D","validateGeometryAttributes","attributes","positions","normals","texCoords","size","constant","value","Float32Array","getGeometry","Geometry","DEFAULT_COLOR","defaultProps","mesh","type","async","texture","sizeScale","min","desaturate","brightness","wireframe","lightSettings","getPosition","x","position","getColor","getSize","getYaw","d","yaw","getPitch","pitch","getRoll","roll","MeshLayer","projectModule","use64bitProjection","vs","fs","modules","attributeManager","getAttributeManager","addInstanced","instancePositions","transition","accessor","instancePositions64xy","update","calculateInstancePositions64xyLow","instanceSizes","instanceRotations","calculateInstanceRotations","instanceColors","GL","UNSIGNED_BYTE","defaultValue","setState","emptyTexture","context","Uint8Array","width","height","props","oldProps","changeFlags","state","model","delete","_getModel","invalidateAll","setTexture","setDrawMode","LINE_STRIP","TRIANGLES","uniforms","render","sampler","hasTexture","Boolean","Model","getShaders","id","geometry","drawMode","isInstanced","shaderCache","attribute","isFP64","use64bitPositions","i","point","Layer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, loadTextures, Texture2D, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './mesh-layer-vertex.glsl';\nimport fs from './mesh-layer-fragment.glsl';\n\nimport assert from 'assert';\n\nconst RADIAN_PER_DEGREE = Math.PI / 180;\n\n/*\n * Load image data into luma.gl Texture2D objects\n * @param {WebGLContext} gl\n * @param {String|Texture2D|HTMLImageElement|Uint8ClampedArray} src - source of image data\n *   can be url string, Texture2D object, HTMLImageElement or pixel array\n * @returns {Promise} resolves to an object with name -> texture mapping\n */\nfunction getTexture(gl, src, opts) {\n  if (typeof src === 'string') {\n    // Url, load the image\n    return loadTextures(gl, Object.assign({urls: [src]}, opts))\n      .then(textures => textures[0])\n      .catch(error => {\n        throw new Error(`Could not load texture from ${src}: ${error}`);\n      });\n  }\n  return new Promise(resolve => resolve(getTextureFromData(gl, src, opts)));\n}\n\n/*\n * Convert image data into texture\n * @returns {Texture2D} texture\n */\nfunction getTextureFromData(gl, data, opts) {\n  if (data instanceof Texture2D) {\n    return data;\n  }\n  return new Texture2D(gl, Object.assign({data}, opts));\n}\n\nfunction validateGeometryAttributes(attributes) {\n  assert(attributes.positions && attributes.normals);\n  if (!attributes.texCoords) {\n    attributes.texCoords = {size: 2, constant: true, value: new Float32Array(2)};\n  }\n}\n\n/*\n * Convert mesh data into geometry\n * @returns {Geometry} geometry\n */\nfunction getGeometry(data) {\n  if (data instanceof Geometry) {\n    validateGeometryAttributes(data.attributes);\n    return data;\n  } else if (data.positions) {\n    validateGeometryAttributes(data);\n    return new Geometry({\n      attributes: data\n    });\n  }\n  throw Error('Invalid mesh');\n}\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  mesh: {type: 'object', value: null, async: true},\n  texture: null,\n  sizeScale: {type: 'number', value: 1, min: 0},\n  desaturate: {type: 'number', value: 0, min: 0},\n  brightness: {type: 'number', value: 0, min: 0},\n\n  fp64: false,\n  wireframe: false,\n  // Optional settings for 'lighting' shader module\n  lightSettings: {},\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: [1, 1, 1]},\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  getYaw: {type: 'accessor', value: d => d.yaw || 0},\n  getPitch: {type: 'accessor', value: d => d.pitch || 0},\n  getRoll: {type: 'accessor', value: d => d.roll || 0}\n};\n\nexport default class MeshLayer extends Layer {\n  getShaders() {\n    const projectModule = this.use64bitProjection() ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'lighting', 'picking']};\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instancePositions64xy: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceSizes: {\n        size: 3,\n        transition: true,\n        accessor: 'getSize'\n      },\n      instanceRotations: {\n        size: 3,\n        transition: true,\n        accessor: ['getYaw', 'getPitch', 'getRoll'],\n        update: this.calculateInstanceRotations\n      },\n      instanceColors: {\n        size: 4,\n        transition: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      }\n    });\n\n    this.setState({\n      // Avoid luma.gl's missing uniform warning\n      // TODO - add feature to luma.gl to specify ignored uniforms?\n      emptyTexture: new Texture2D(this.context.gl, {\n        data: new Uint8Array(4),\n        width: 1,\n        height: 1\n      })\n    });\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    if (props.fp64 !== oldProps.fp64 || props.mesh !== oldProps.mesh) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n\n    if (props.texture !== oldProps.texture) {\n      this.setTexture(props.texture);\n    }\n\n    if (props.wireframe !== oldProps.wireframe) {\n      if (this.state.model) {\n        this.state.model.setDrawMode(props.wireframe ? GL.LINE_STRIP : GL.TRIANGLES);\n      }\n    }\n  }\n\n  draw({uniforms}) {\n    const {sizeScale, desaturate, brightness} = this.props;\n    const {model, texture, emptyTexture} = this.state;\n\n    if (model) {\n      model.render(\n        Object.assign({}, uniforms, {\n          sampler: texture || emptyTexture,\n          hasTexture: Boolean(texture),\n          sizeScale,\n          desaturate,\n          brightness\n        })\n      );\n    }\n  }\n\n  _getModel(gl) {\n    if (!this.props.mesh) {\n      return null;\n    }\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: getGeometry(this.props.mesh),\n        drawMode: this.props.wireframe ? GL.LINE_STRIP : GL.TRIANGLES,\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  setTexture(src) {\n    const {gl} = this.context;\n\n    if (src) {\n      getTexture(gl, src).then(texture => {\n        this.setState({texture});\n      });\n    } else {\n      this.setState({texture: null});\n    }\n  }\n\n  calculateInstancePositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const position = getPosition(point);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n\n  // yaw(z), pitch(y) and roll(x) in radians\n  calculateInstanceRotations(attribute) {\n    const {data, getYaw, getPitch, getRoll} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      value[i++] = getRoll(point) * RADIAN_PER_DEGREE;\n      value[i++] = getPitch(point) * RADIAN_PER_DEGREE;\n      value[i++] = getYaw(point) * RADIAN_PER_DEGREE;\n    }\n  }\n}\n\nMeshLayer.layerName = 'MeshLayer';\nMeshLayer.defaultProps = defaultProps;\n"],"file":"mesh-layer.js"}