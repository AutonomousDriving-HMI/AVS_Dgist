function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { TableRowComponent, TableCell } from './styled-components';
/**
 * A stateless component that renders a data row in the Table component
 */

export default class TableRow extends PureComponent {
  render() {
    const _this$props = this.props,
          id = _this$props.id,
          index = _this$props.index,
          data = _this$props.data,
          theme = _this$props.theme,
          userStyle = _this$props.userStyle,
          columns = _this$props.columns,
          style = _this$props.style,
          renderCell = _this$props.renderCell;
    return React.createElement("div", {
      style: style
    }, React.createElement(TableRowComponent, {
      theme: theme,
      index: index,
      userStyle: userStyle.row
    }, data.data.map((colValue, colIndex) => {
      const column = columns[colIndex];
      return React.createElement(TableCell, {
        key: colIndex,
        index: colIndex,
        style: {
          width: column.width
        },
        title: `${column.name}: ${colValue}`,
        theme: theme,
        userStyle: userStyle.cell
      }, renderCell({
        value: colValue,
        column: column.srcObject,
        columnIndex: colIndex,
        row: data.srcObject,
        rowId: id
      }));
    })));
  }

}

_defineProperty(TableRow, "propTypes", {
  id: PropTypes.string,
  data: PropTypes.shape({
    data: PropTypes.array
  }),
  style: PropTypes.object,
  renderCell: PropTypes.func,
  columns: PropTypes.array
});
//# sourceMappingURL=table-row.js.map