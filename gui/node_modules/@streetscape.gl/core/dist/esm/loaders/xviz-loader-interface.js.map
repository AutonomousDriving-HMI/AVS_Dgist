{"version":3,"sources":["../../../src/loaders/xviz-loader-interface.js"],"names":["getXVIZConfig","clamp","getTimeSeries","createSelector","XVIZLoaderInterface","options","get","getStreamSettings","_getStreams","streamSettings","streams","result","streamName","getMetadata","metadata","start_time","TIME_WINDOW","end_time","getLogSynchronizer","getCurrentTime","getLookAhead","getStreams","logSynchronizer","timestamp","lookAhead","Number","isFinite","setTime","setLookAheadTimeOffset","getCurrentFrame","_updateTimer","listeners","forEach","o","_version","_debug","debug","callbacks","state","eventType","cb","push","index","indexOf","splice","eventArgs","instance","findIndex","key","value","requestAnimationFrame","_update","Error","startTime","getLogStartTime","endTime","getLogEndTime","set","settings","Object","keys","length","newTimestamp","seek"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {getXVIZConfig} from '@xviz/parser';\nimport {clamp} from 'math.gl';\n\nimport {getTimeSeries} from '../utils/metrics-helper';\nimport createSelector from '../utils/create-selector';\n\n/* eslint-disable callback-return */\nexport default class XVIZLoaderInterface {\n  constructor(options = {}) {\n    this.options = options;\n    this._debug = options.debug || (() => {});\n    this.callbacks = {};\n\n    this.listeners = [];\n    this.state = {};\n    this._version = 0;\n    this._updateTimer = null;\n  }\n\n  /* Event types:\n   * - ready\n   * - update\n   * - finish\n   * - error\n   */\n  on(eventType, cb) {\n    this.callbacks[eventType] = this.callbacks[eventType] || [];\n    this.callbacks[eventType].push(cb);\n    return this;\n  }\n\n  off(eventType, cb) {\n    const callbacks = this.callbacks[eventType];\n    if (callbacks) {\n      const index = callbacks.indexOf(cb);\n      if (index >= 0) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n\n  emit(eventType, eventArgs) {\n    const callbacks = this.callbacks[eventType];\n    if (callbacks) {\n      for (const cb of callbacks) {\n        cb(eventType, eventArgs);\n      }\n    }\n  }\n\n  subscribe(instance) {\n    this.listeners.push(instance);\n  }\n\n  unsubscribe(instance) {\n    const index = this.listeners.findIndex(o => o === instance);\n    if (index >= 0) {\n      this.listeners.splice(index, 1);\n    }\n  }\n\n  get(key) {\n    return this.state[key];\n  }\n\n  set(key, value) {\n    if (this.state[key] !== value) {\n      this.state[key] = value;\n      this._version++;\n      if (!this._updateTimer) {\n        /* global requestAnimationFrame */\n        this._updateTimer = requestAnimationFrame(this._update);\n      }\n    }\n  }\n\n  /* Connection API */\n  isOpen() {\n    return false;\n  }\n\n  connect() {\n    throw new Error('not implemented');\n  }\n\n  seek(timestamp) {\n    const metadata = this.getMetadata();\n\n    if (metadata) {\n      const startTime = this.getLogStartTime();\n      const endTime = this.getLogEndTime();\n      if (Number.isFinite(startTime) && Number.isFinite(endTime)) {\n        timestamp = clamp(timestamp, startTime, endTime);\n      }\n    }\n\n    this.set('timestamp', timestamp);\n  }\n\n  setLookAhead(lookAhead) {\n    this.set('lookAhead', lookAhead);\n  }\n\n  updateStreamSettings(settings) {\n    const streamSettings = this.get('streamSettings');\n    this.set('streamSettings', {...streamSettings, ...settings});\n  }\n\n  close() {\n    throw new Error('not implemented');\n  }\n\n  /* Data selector API */\n\n  getCurrentTime = () => this.get('timestamp');\n\n  getLookAhead = () => this.get('lookAhead');\n\n  getMetadata = () => this.get('metadata');\n\n  getStreamSettings = () => this.get('streamSettings');\n\n  getLogSynchronizer = () => this.get('logSynchronizer');\n\n  _getStreams = () => this.get('streams');\n\n  getStreams = createSelector(\n    this,\n    [this.getStreamSettings, this._getStreams],\n    (streamSettings, streams) => {\n      if (!streamSettings || !streams) {\n        return streams;\n      }\n      const result = {};\n      for (const streamName in streams) {\n        if (streamSettings[streamName]) {\n          result[streamName] = streams[streamName];\n        }\n      }\n      return result;\n    }\n  );\n\n  getBufferRange() {\n    throw new Error('not implemented');\n  }\n\n  getBufferStart() {\n    return this.getLogStartTime();\n  }\n\n  getBufferEnd() {\n    return this.getLogEndTime();\n  }\n\n  getLogStartTime = createSelector(this, this.getMetadata, metadata => {\n    return metadata && metadata.start_time && metadata.start_time + getXVIZConfig().TIME_WINDOW;\n  });\n\n  getLogEndTime = createSelector(this, this.getMetadata, metadata => {\n    return metadata && metadata.end_time;\n  });\n\n  getCurrentFrame = createSelector(\n    this,\n    [\n      this.getLogSynchronizer,\n      this.getStreamSettings,\n      this.getCurrentTime,\n      this.getLookAhead,\n      this.getStreams\n    ],\n    // `getStreams` is only needed to trigger recomputation.\n    // The logSynchronizer has access to the streamBuffer.\n    (logSynchronizer, streamSettings, timestamp, lookAhead) => {\n      if (logSynchronizer && Number.isFinite(timestamp)) {\n        logSynchronizer.setTime(timestamp);\n        logSynchronizer.setLookAheadTimeOffset(lookAhead);\n        return logSynchronizer.getCurrentFrame(streamSettings);\n      }\n      return null;\n    }\n  );\n\n  // TODO add declare ui metadata\n  getTimeSeries = createSelector(this, [this.getMetadata, this.getStreams], (metadata, streams) =>\n    getTimeSeries({metadata, streams})\n  );\n\n  /* Private actions */\n  _update = () => {\n    this._updateTimer = null;\n    this.listeners.forEach(o => o(this._version));\n  };\n\n  _setMetadata(metadata) {\n    this.set('metadata', metadata);\n    if (metadata.streams && Object.keys(metadata.streams).length > 0) {\n      this.set('streamSettings', metadata.streams);\n    }\n    const timestamp = this.get('timestamp');\n    const newTimestamp = Number.isFinite(timestamp) ? timestamp : metadata.start_time;\n    if (Number.isFinite(newTimestamp)) {\n      this.seek(newTimestamp);\n    }\n  }\n}\n"],"file":"xviz-loader-interface.js"}