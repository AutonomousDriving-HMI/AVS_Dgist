"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListItemPlaceholder = exports.ListItemTitle = exports.ListItemContainer = exports.ListContainer = void 0;

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _theme = require("../shared/theme");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ListContainer = _styled.default.div(function (props) {
  return _objectSpread({}, props.theme.__reset__, {
    userSelect: 'none'
  }, (0, _theme.evaluateStyle)(props.userStyle, props));
});

exports.ListContainer = ListContainer;

var ListItemContainer = _styled.default.div(function (props) {
  var style = props.isActive ? {
    boxSizing: 'border-box',
    position: 'fixed',
    zIndex: 999,
    transitionProperty: 'all',
    transitionTimingFunction: props.theme.transitionTimingFunction,
    transitionDuration: props.isDragging ? 0 : props.theme.transitionDuration,
    boxShadow: props.theme.shadow
  } : {};
  return Object.assign(style, (0, _theme.evaluateStyle)(props.userStyle, props));
});

exports.ListItemContainer = ListItemContainer;

var ListItemTitle = _styled.default.div(function (props) {
  return _objectSpread({}, (0, _theme.evaluateStyle)(props.userStyle, props));
});

exports.ListItemTitle = ListItemTitle;

var ListItemPlaceholder = _styled.default.div(function (props) {
  return _objectSpread({
    boxSizing: 'border-box',
    transitionProperty: 'height',
    transitionTimingFunction: props.theme.transitionTimingFunction,
    transitionDuration: props.theme.transitionDuration,
    borderStyle: 'dotted',
    borderColor: props.theme.controlColorPrimary,
    borderWidth: 2
  }, (0, _theme.evaluateStyle)(props.userStyle, props));
});

exports.ListItemPlaceholder = ListItemPlaceholder;
//# sourceMappingURL=styled-components.js.map