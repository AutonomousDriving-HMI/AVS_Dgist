{"version":3,"sources":["../../../../src/shared/label/index.js"],"names":["React","PureComponent","PropTypes","styled","withTheme","evaluateStyle","InfoIcon","Tooltip","LabelComponent","label","props","theme","__reset__","display","alignItems","cursor","color","isEnabled","textColorPrimary","textColorDisabled","marginLeft","spacingNormal","userStyle","LabelInfo","div","controlColorPrimary","controlColorDisabled","verticalAlign","width","height","lineHeight","textAlign","path","fill","Label","htmlFor","for","style","children","tooltip","badge","labelProps","styleProps","tooltipTarget","iconInfo","string","object","element","bool"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from '@emotion/styled';\nimport {withTheme, evaluateStyle} from '../theme';\nimport {InfoIcon} from '../icons';\n\nimport {Tooltip} from '../popover';\n\nconst LabelComponent = styled.label(props => ({\n  ...props.theme.__reset__,\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'inherit',\n  color: props.isEnabled ? props.theme.textColorPrimary : props.theme.textColorDisabled,\n\n  '>*': {\n    marginLeft: props.theme.spacingNormal\n  },\n\n  ...evaluateStyle(props.userStyle, props)\n}));\n\nconst LabelInfo = styled.div(props => ({\n  display: 'inline-block',\n  color: props.isEnabled ? props.theme.controlColorPrimary : props.theme.controlColorDisabled,\n  cursor: 'default',\n  verticalAlign: 'middle',\n  width: 16,\n  height: 16,\n  lineHeight: '16px',\n  textAlign: 'center',\n  path: {fill: 'currentColor'},\n\n  ...evaluateStyle(props.userStyle, props)\n}));\n\n// Input component that can be toggled on and off\nclass Label extends PureComponent {\n  static propTypes = {\n    for: PropTypes.string,\n    style: PropTypes.object,\n    tooltip: PropTypes.string,\n    badge: PropTypes.element,\n    isEnabled: PropTypes.bool\n  };\n\n  static defaultProps = {\n    style: {},\n    isEnabled: true\n  };\n\n  render() {\n    const {theme, isEnabled, for: htmlFor, style, children, tooltip, badge} = this.props;\n    const labelProps = {};\n\n    if (htmlFor) {\n      labelProps.htmlFor = htmlFor;\n    }\n\n    const styleProps = {\n      theme,\n      isEnabled\n    };\n\n    return (\n      <LabelComponent {...styleProps} userStyle={style.label}>\n        {children}\n        {tooltip && (\n          <Tooltip style={style.tooltip} content={tooltip}>\n            <LabelInfo {...styleProps} userStyle={style.tooltipTarget}>\n              {style.iconInfo || <InfoIcon />}\n            </LabelInfo>\n          </Tooltip>\n        )}\n        {badge}\n      </LabelComponent>\n    );\n  }\n}\n\nexport default withTheme(Label);\n"],"file":"index.js"}