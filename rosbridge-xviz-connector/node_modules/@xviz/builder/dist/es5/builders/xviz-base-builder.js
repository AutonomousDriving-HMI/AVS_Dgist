"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

// Copyright (c) 2019 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/* XVIZBaseBuilder provides validation and category information
 * shared across all builders.
 */
var XVIZBaseBuilder =
/*#__PURE__*/
function () {
  function XVIZBaseBuilder(_ref) {
    var validator = _ref.validator,
        category = _ref.category,
        metadata = _ref.metadata;

    _classCallCheck(this, XVIZBaseBuilder);

    this._streamId = null;
    this._category = category;
    this._metadata = metadata;
    this._validator = validator;
  }

  _createClass(XVIZBaseBuilder, [{
    key: "stream",
    value: function stream(streamId) {
      if (this._streamId) {
        this._flush();
      }

      this._streamId = streamId;
      return this;
    }
  }, {
    key: "getStreamId",
    value: function getStreamId() {
      return this._streamId;
    }
  }, {
    key: "getCategory",
    value: function getCategory() {
      return this._category;
    }
  }, {
    key: "getMetadata",
    value: function getMetadata() {
      return this._metadata;
    }
  }, {
    key: "_flush",
    value: function _flush() {
      throw new Error('Derived class must implement the "_flush()" method.');
    }
  }, {
    key: "_reset",
    value: function _reset() {
      this._category = null;
    }
  }, {
    key: "_validate",
    value: function _validate() {
      this._validator.hasProp(this, '_streamId');

      this._validator.hasProp(this, '_category');

      this._validator.matchMetadata(this);
    }
  }, {
    key: "validateWarn",
    value: function validateWarn(msg) {
      this._validator.warn(msg);
    }
  }, {
    key: "validateError",
    value: function validateError(msg) {
      this._validator.error(msg);
    }
  }, {
    key: "validatePropSetOnce",
    value: function validatePropSetOnce(prop) {
      this._validator.propSetOnce(this, prop);
    }
  }]);

  return XVIZBaseBuilder;
}();

exports.default = XVIZBaseBuilder;
//# sourceMappingURL=xviz-base-builder.js.map