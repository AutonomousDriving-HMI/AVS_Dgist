"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _autosizer = _interopRequireDefault(require("../shared/autosizer"));

var _slider = _interopRequireDefault(require("../shared/slider"));

var _utils = require("./utils");

var _d3Scale = require("d3-scale");

var _theme = require("../shared/theme");

var _styledComponents = require("./styled-components.js");

var _icons = require("../shared/icons");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DEFAULT_PADDING = 24;
var COMPACT_CONTAINER_STYLE = {
  display: 'flex',
  alignItems: 'flex-end'
};

function noop() {}

function normalizePadding(padding) {
  padding = padding || 0;

  if (Number.isFinite(padding)) {
    return {
      right: padding,
      left: padding
    };
  }

  return Object.assign({
    right: 0,
    left: 0
  }, padding);
}
/*
 * @class
 */


var PlaybackControl =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(PlaybackControl, _PureComponent);

  function PlaybackControl(props) {
    var _this;

    _classCallCheck(this, PlaybackControl);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaybackControl).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_play", function () {
      _this.props.onPlay();
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_pause", function () {
      _this.props.onPause();
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_seek", function (newTime) {
      var currentTime = _this.props.currentTime;

      if (newTime !== currentTime) {
        _this.props.onSeek(newTime);
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_onResize", function (_ref) {
      var width = _ref.width;
      var _this$props$style$pad = _this.props.style.padding,
          padding = _this$props$style$pad === void 0 ? 24 : _this$props$style$pad;
      padding = normalizePadding(padding);

      _this.scale.range([0, width - padding.left - padding.right]); // Trigger rerender


      _this.setState({
        width: width
      });
    });

    _this.scale = (0, _d3Scale.scaleLinear)().domain([props.startTime, props.endTime]);
    return _this;
  }

  _createClass(PlaybackControl, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(newProps) {
      var props = this.props;

      if (newProps.step !== props.step || newProps.startTime !== props.startTime || newProps.endTime !== props.endTime) {
        // Video source has changed
        // Kill any running animation to avoid callbacks in incorrect time range
        this._pause(); // Update currentTime to make sure it is the start of the new range


        this._seek(newProps.startTime);

        this.scale.domain([newProps.startTime, newProps.endTime]);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this._pause();
    }
  }, {
    key: "_renderMarker",
    value: function _renderMarker(marker, i, Component, styleProps, userStyle) {
      var scale = this.scale;
      var _marker$startTime = marker.startTime,
          startTime = _marker$startTime === void 0 ? marker.time : _marker$startTime,
          _marker$endTime = marker.endTime,
          endTime = _marker$endTime === void 0 ? marker.time : _marker$endTime,
          style = marker.style,
          content = marker.content;
      var x0 = scale(startTime);
      var x1 = scale(endTime);

      var markerStyle = _objectSpread({}, style, {
        position: 'absolute',
        left: x0,
        width: x1 - x0
      });

      return _react.default.createElement(Component, _extends({
        key: i
      }, styleProps, {
        style: markerStyle,
        userStyle: userStyle
      }), content);
    }
  }, {
    key: "_renderTimeline",
    value: function _renderTimeline(styleProps) {
      var _this2 = this;

      var _this$props = this.props,
          style = _this$props.style,
          tickSpacing = _this$props.tickSpacing,
          formatTick = _this$props.formatTick,
          markers = _this$props.markers;
      var scale = this.scale;
      var ticks = (0, _utils.getTimelineTicks)(scale, tickSpacing, formatTick);
      return _react.default.createElement("div", null, _react.default.createElement(_styledComponents.TicksContainer, _extends({}, styleProps, {
        userStyle: style.ticks
      }), ticks.map(function (t, i) {
        var tickStyle = {
          position: 'absolute',
          left: t.x
        };
        return _react.default.createElement(_styledComponents.Tick, _extends({
          key: i
        }, styleProps, {
          userStyle: style.tick,
          style: tickStyle
        }), _react.default.createElement(_styledComponents.TickLabel, _extends({}, styleProps, {
          userStyle: style.tickLabel
        }), t.label));
      })), markers && _react.default.createElement(_styledComponents.MarkersContainer, _extends({}, styleProps, {
        userStyle: style.markers
      }), markers.map(function (marker, i) {
        return _this2._renderMarker(marker, i, _styledComponents.MarkerComponent, styleProps, style.marker);
      })));
    }
  }, {
    key: "_renderSlider",
    value: function _renderSlider(styleProps) {
      var _this3 = this;

      var _this$props2 = this.props,
          style = _this$props2.style,
          currentTime = _this$props2.currentTime,
          startTime = _this$props2.startTime,
          endTime = _this$props2.endTime,
          step = _this$props2.step,
          _this$props2$bufferRa = _this$props2.bufferRange,
          bufferRange = _this$props2$bufferRa === void 0 ? [] : _this$props2$bufferRa;
      var buffers = Array.isArray(bufferRange) ? bufferRange : [bufferRange];
      return _react.default.createElement(_slider.default, {
        style: style.slider,
        value: currentTime,
        onChange: this._seek,
        knobSize: 18,
        step: step,
        min: startTime,
        max: endTime
      }, buffers.map(function (range, i) {
        return _this3._renderMarker(range, i, _styledComponents.BufferComponent, styleProps, style.buffer);
      }));
    }
  }, {
    key: "_renderPlayPauseButton",
    value: function _renderPlayPauseButton(styleProps) {
      var _this$props3 = this.props,
          isPlaying = _this$props3.isPlaying,
          style = _this$props3.style;
      return _react.default.createElement(_styledComponents.PlayPauseButton, _extends({}, styleProps, {
        userStyle: style.playPauseButton,
        onClick: isPlaying ? this._pause : this._play
      }), isPlaying ? style.iconPause || _react.default.createElement(_icons.PauseIcon, null) : style.iconPlay || _react.default.createElement(_icons.PlayIcon, null));
    }
  }, {
    key: "_renderTimestamp",
    value: function _renderTimestamp(styleProps) {
      var _this$props4 = this.props,
          style = _this$props4.style,
          currentTime = _this$props4.currentTime,
          formatTimestamp = _this$props4.formatTimestamp;
      return _react.default.createElement(_styledComponents.Timestamp, _extends({}, styleProps, {
        userStyle: style.timestamp
      }), formatTimestamp(currentTime));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props5 = this.props,
          theme = _this$props5.theme,
          compact = _this$props5.compact,
          width = _this$props5.width,
          style = _this$props5.style,
          className = _this$props5.className,
          isPlaying = _this$props5.isPlaying;
      var _style$padding = style.padding,
          padding = _style$padding === void 0 ? DEFAULT_PADDING : _style$padding;
      padding = normalizePadding(padding);
      var styleProps = {
        theme: theme,
        compact: compact,
        isPlaying: isPlaying
      };
      var wrapperStyle = {
        width: width
      };

      if (compact) {
        var sliderStyle = {
          flexGrow: 1,
          paddingLeft: padding.left,
          paddingRight: padding.right
        };
        return _react.default.createElement(_styledComponents.WrapperComponent, _extends({
          className: className
        }, styleProps, {
          userStyle: style.wrapper,
          style: wrapperStyle
        }), _react.default.createElement("div", {
          style: COMPACT_CONTAINER_STYLE
        }, this._renderPlayPauseButton(styleProps), _react.default.createElement("div", {
          style: sliderStyle
        }, _react.default.createElement(_autosizer.default, {
          disableHeight: true,
          onResize: this._onResize
        }), this._renderTimeline(styleProps), this._renderSlider(styleProps)), this._renderTimestamp(styleProps)), _react.default.createElement(_styledComponents.ControlsContainer, _extends({}, styleProps, {
          userStyle: style.controls
        }), this.props.children));
      }

      Object.assign(wrapperStyle, {
        paddingLeft: padding.left,
        paddingRight: padding.right
      });
      return _react.default.createElement(_styledComponents.WrapperComponent, _extends({
        className: className
      }, styleProps, {
        userStyle: style.wrapper,
        style: wrapperStyle
      }), _react.default.createElement(_autosizer.default, {
        disableHeight: true,
        onResize: this._onResize
      }), this._renderTimeline(styleProps), this._renderSlider(styleProps), _react.default.createElement(_styledComponents.ControlsContainer, _extends({}, styleProps, {
        userStyle: style.controls
      }), this._renderPlayPauseButton(styleProps), this._renderTimestamp(styleProps), this.props.children));
    }
  }]);

  return PlaybackControl;
}(_react.PureComponent);

_defineProperty(PlaybackControl, "propTypes", {
  width: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  style: _propTypes.default.object,
  compact: _propTypes.default.bool,
  currentTime: _propTypes.default.number.isRequired,
  startTime: _propTypes.default.number,
  endTime: _propTypes.default.number.isRequired,
  isPlaying: _propTypes.default.bool.isRequired,
  className: _propTypes.default.string,
  // config
  step: _propTypes.default.number,
  tickSpacing: _propTypes.default.number,
  bufferRange: _propTypes.default.arrayOf(_propTypes.default.object),
  markers: _propTypes.default.arrayOf(_propTypes.default.object),
  // callbacks
  formatTick: _propTypes.default.func,
  formatTimestamp: _propTypes.default.func,
  onPlay: _propTypes.default.func,
  onPause: _propTypes.default.func,
  onSeek: _propTypes.default.func
});

_defineProperty(PlaybackControl, "defaultProps", {
  style: {},
  compact: false,
  className: '',
  startTime: 0,
  step: 0.1,
  tickSpacing: 100,
  formatTick: function formatTick(x) {
    return (0, _utils.formatTimeCode)(x, '{mm}:{ss}');
  },
  formatTimestamp: function formatTimestamp(x) {
    return (0, _utils.formatTimeCode)(x, '{mm}:{ss}.{S}');
  },
  onPlay: noop,
  onPause: noop,
  onSeek: noop
});

var ThemedPlaybackControl = (0, _theme.withTheme)(PlaybackControl);
ThemedPlaybackControl.formatTimeCode = _utils.formatTimeCode;
var _default = ThemedPlaybackControl;
exports.default = _default;
//# sourceMappingURL=index.js.map