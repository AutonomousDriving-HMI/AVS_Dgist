{"version":3,"sources":["../../../src/gltf/gltf-loader.js"],"names":["GLTFParser","parseTextGLTF","json","options","parse","parseBinaryGLTF","glbArrayBuffer","name","extension","parseTextSync","parseSync"],"mappings":"AAAA;AAEA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA2C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAChD,SAAO,IAAIH,UAAJ,GAAiBI,KAAjB,CAAuBF,IAAvB,EAA6BC,OAA7B,CAAP;AACD;AAED,OAAO,SAASE,eAAT,CAAyBC,cAAzB,EAAuD;AAAA,MAAdH,OAAc,uEAAJ,EAAI;AAC5D,SAAO,IAAIH,UAAJ,GAAiBI,KAAjB,CAAuBE,cAAvB,EAAuCH,OAAvC,CAAP;AACD;AAED,eAAe;AACbI,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,KAAT,CAFE;AAGbC,EAAAA,aAAa,EAAER,aAHF;AAIbS,EAAAA,SAAS,EAAEL;AAJE,CAAf","sourcesContent":["// Binary container format for glTF\n\nimport GLTFParser from './gltf-parser';\n\nexport function parseTextGLTF(json, options = {}) {\n  return new GLTFParser().parse(json, options);\n}\n\nexport function parseBinaryGLTF(glbArrayBuffer, options = {}) {\n  return new GLTFParser().parse(glbArrayBuffer, options);\n}\n\nexport default {\n  name: 'glTF',\n  extension: ['gltf', 'glb'],\n  parseTextSync: parseTextGLTF,\n  parseSync: parseBinaryGLTF\n};\n"],"file":"gltf-loader.js"}