{"version":3,"sources":["../../../../src/layers/mesh-layer/mesh-layer-fragment.glsl.js"],"names":["carLayerFragment"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,gBAAgB,igCAAtB;eA0CeA,gB","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst carLayerFragment = `\n#define SHADER_NAME mesh-layer-fs\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform float opacity;\nuniform float desaturate;\nuniform float brightness;\n\nvarying vec2 vTexCoord;\nvarying vec4 vColor;\nvarying float vLightWeight;\n\n// apply desaturation and brightness\nvec3 color_transform(vec3 color) {\n  float luminance = (color.r + color.g + color.b) * 0.333333333 + brightness;\n  return mix(color, vec3(luminance), desaturate);\n}\n\nvoid main(void) {\n  vec4 color;\n\n  if (hasTexture) {\n    color = texture2D(sampler, vTexCoord);\n    color.rgb = color_transform(color.rgb);\n  } else {\n    color = vColor;\n  }\n  gl_FragColor = vec4(color.rgb * vLightWeight, color.a * opacity);\n  \n  // use highlight color if this fragment belongs to the selected object.\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n\n  // use picking color if rendering to picking FBO.\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n`;\n\nexport default carLayerFragment;\n"],"file":"mesh-layer-fragment.glsl.js"}