{"version":3,"sources":["../../../src/parsers/parse-stream-workerfarm.js"],"names":["WorkerFarm","getXVIZConfig","subscribeXVIZConfigChange","workerFarm","getWorkerFarm","destroyWorkerFarm","destroy","initializeWorkerFarm","worker","maxConcurrency","xvizConfig","preProcessPrimitive","workerURL","blob","Blob","streamDataWorker","type","URL","createObjectURL","initialMessage","updateWorkerXVIZVersion","broadcast"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAQA,UAAR,QAAyB,uBAAzB;AACA,SAAQC,aAAR,EAAuBC,yBAAvB,QAAuD,uBAAvD;;;;AAGA,IAAIC,UAAU,GAAG,IAAjB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAOD,UAAP;AACD,C,CAED;;AACA,OAAO,SAASE,iBAAT,GAA6B;AAClC,MAAIF,UAAJ,EAAgB;AACdA,IAAAA,UAAU,CAACG,OAAX;AACAH,IAAAA,UAAU,GAAG,IAAb;AACD;AACF;AAED,OAAO,SAASI,oBAAT,OAA4D;AAAA,MAA7BC,MAA6B,QAA7BA,MAA6B;AAAA,iCAArBC,cAAqB;AAAA,MAArBA,cAAqB,oCAAJ,CAAI;;AACjE,MAAI,CAACN,UAAL,EAAiB;AACf,QAAMO,UAAU,qBAAOT,aAAa,EAApB,CAAhB;;AACA,WAAOS,UAAU,CAACC,mBAAlB;AACA,QAAIC,SAAJ;;AAEA,QAAI,OAAOJ,MAAP,KAAkB,QAAtB,EAAgC;AAC9B;AACAI,MAAAA,SAAS,GAAGJ,MAAZ;AACD,KAHD,MAGO;AACL;AACA,UAAMK,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACC,gBAAD,CAAT,EAA6B;AAACC,QAAAA,IAAI,EAAE;AAAP,OAA7B,CAAb;AACAJ,MAAAA,SAAS,GAAGK,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAZ;AACD;;AAEDV,IAAAA,UAAU,GAAG,IAAIH,UAAJ,CAAe;AAC1BY,MAAAA,SAAS,EAATA,SAD0B;AAE1BH,MAAAA,cAAc,EAAdA,cAF0B;AAG1BU,MAAAA,cAAc,EAAE;AAACT,QAAAA,UAAU,EAAVA;AAAD;AAHU,KAAf,CAAb;AAKD;AACF;AAED,OAAO,SAASU,uBAAT,GAAmC;AACxC,MAAIjB,UAAJ,EAAgB;AACd,QAAMO,UAAU,qBAAOT,aAAa,EAApB,CAAhB;;AACA,WAAOS,UAAU,CAACC,mBAAlB;AAEAR,IAAAA,UAAU,CAACkB,SAAX,CAAqB;AAACX,MAAAA,UAAU,EAAVA;AAAD,KAArB;AACD;AACF,C,CAED;AACA;;AACAR,yBAAyB,CAACkB,uBAAD,CAAzB","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* global Blob, URL */\nimport {WorkerFarm} from '../utils/worker-utils';\nimport {getXVIZConfig, subscribeXVIZConfigChange} from '../config/xviz-config';\nimport streamDataWorker from '../../dist/workers/stream-data.worker.js';\n\nlet workerFarm = null;\n\nexport function getWorkerFarm() {\n  return workerFarm;\n}\n\n// Mainly for testing\nexport function destroyWorkerFarm() {\n  if (workerFarm) {\n    workerFarm.destroy();\n    workerFarm = null;\n  }\n}\n\nexport function initializeWorkerFarm({worker, maxConcurrency = 4}) {\n  if (!workerFarm) {\n    const xvizConfig = {...getXVIZConfig()};\n    delete xvizConfig.preProcessPrimitive;\n    let workerURL;\n\n    if (typeof worker === 'string') {\n      // worker is an URL\n      workerURL = worker;\n    } else {\n      // use default worker\n      const blob = new Blob([streamDataWorker], {type: 'application/javascript'});\n      workerURL = URL.createObjectURL(blob);\n    }\n\n    workerFarm = new WorkerFarm({\n      workerURL,\n      maxConcurrency,\n      initialMessage: {xvizConfig}\n    });\n  }\n}\n\nexport function updateWorkerXVIZVersion() {\n  if (workerFarm) {\n    const xvizConfig = {...getXVIZConfig()};\n    delete xvizConfig.preProcessPrimitive;\n\n    workerFarm.broadcast({xvizConfig});\n  }\n}\n\n// Subscribe to XVIZConfig changes so we can\n// update WebWorkers to adapt to XVIZ version changes\nsubscribeXVIZConfigChange(updateWorkerXVIZVersion);\n"],"file":"parse-stream-workerfarm.js"}