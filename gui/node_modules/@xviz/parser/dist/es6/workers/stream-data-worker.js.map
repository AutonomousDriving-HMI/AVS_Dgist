{"version":3,"sources":["../../../src/workers/stream-data-worker.js"],"names":["setXVIZConfig","parseStreamDataMessage","preSerialize","getTransferList","LOG_STREAM_MESSAGE","config","self","onResult","message","transfers","Set","type","TIMESLICE","streamName","streams","stream","pointCloud","images","length","forEach","image","VIDEO_FRAME","imageData","postMessage","Array","from","onError","error","onmessage","e","data","xvizConfig"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,aAAR,QAA4B,uBAA5B;AACA,SAAQC,sBAAR,QAAqC,sCAArC;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AACA,SAAQC,eAAR,QAA8B,uBAA9B;AACA,SAAQC,kBAAR,QAAiC,cAAjC;AAEA,gBAAeC,MAAM,IAAIC,IAAI,IAAI;AAC/BN,EAAAA,aAAa,CAACK,MAAD,CAAb;;AAEA,WAASE,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,UAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB;;AAEA,YAAQF,OAAO,CAACG,IAAhB;AACE,WAAKP,kBAAkB,CAACQ,SAAxB;AACE,aAAK,MAAMC,UAAX,IAAyBL,OAAO,CAACM,OAAjC,EAA0C;AACxC,gBAAMC,MAAM,GAAGP,OAAO,CAACM,OAAR,CAAgBD,UAAhB,CAAf;AACAV,UAAAA,eAAe,CAACY,MAAM,CAACC,UAAR,EAAoB,IAApB,EAA0BP,SAA1B,CAAf;;AACA,cAAIM,MAAM,CAACE,MAAP,IAAiBF,MAAM,CAACE,MAAP,CAAcC,MAAnC,EAA2C;AACzCH,YAAAA,MAAM,CAACE,MAAP,CAAcE,OAAd,CAAsBC,KAAK,IAAIjB,eAAe,CAACiB,KAAD,EAAQ,IAAR,EAAcX,SAAd,CAA9C;AACD;AACF;;AACD;;AAEF,WAAKL,kBAAkB,CAACiB,WAAxB;AACE;AACAlB,QAAAA,eAAe,CAACK,OAAO,CAACc,SAAT,EAAoB,KAApB,EAA2Bb,SAA3B,CAAf;AACA;;AAEF;AAhBF;;AAmBAD,IAAAA,OAAO,GAAGN,YAAY,CAACM,OAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;;AAEAF,IAAAA,IAAI,CAACiB,WAAL,CAAiBf,OAAjB,EAA0BgB,KAAK,CAACC,IAAN,CAAWhB,SAAX,CAA1B;AACD;;AAED,WAASiB,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,UAAMA,KAAN;AACD;;AAEDrB,EAAAA,IAAI,CAACsB,SAAL,GAAiBC,CAAC,IAAI;AACpB,QAAIA,CAAC,CAACC,IAAF,IAAUD,CAAC,CAACC,IAAF,CAAOC,UAArB,EAAiC;AAC/B/B,MAAAA,aAAa,CAAC6B,CAAC,CAACC,IAAF,CAAOC,UAAR,CAAb;AACD,KAFD,MAEO,IAAIF,CAAC,CAACC,IAAN,EAAY;AACjB7B,MAAAA,sBAAsB,CAAC4B,CAAC,CAACC,IAAH,EAASvB,QAAT,EAAmBmB,OAAnB,CAAtB;AACD;AACF,GAND;AAOD,CA/CD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {setXVIZConfig} from '../config/xviz-config';\nimport {parseStreamDataMessage} from '../parsers/parse-stream-data-message';\nimport {preSerialize} from '../parsers/serialize';\nimport {getTransferList} from '../utils/worker-utils';\nimport {LOG_STREAM_MESSAGE} from '../constants';\n\nexport default config => self => {\n  setXVIZConfig(config);\n\n  function onResult(message) {\n    const transfers = new Set();\n\n    switch (message.type) {\n      case LOG_STREAM_MESSAGE.TIMESLICE:\n        for (const streamName in message.streams) {\n          const stream = message.streams[streamName];\n          getTransferList(stream.pointCloud, true, transfers);\n          if (stream.images && stream.images.length) {\n            stream.images.forEach(image => getTransferList(image, true, transfers));\n          }\n        }\n        break;\n\n      case LOG_STREAM_MESSAGE.VIDEO_FRAME:\n        // v1 video stream\n        getTransferList(message.imageData, false, transfers);\n        break;\n\n      default:\n    }\n\n    message = preSerialize(message);\n\n    /* uncomment for debug */\n    // message._size = {\n    //   arraybuffer: transfers.size\n    // };\n    // message._sentAt = Date.now();\n\n    self.postMessage(message, Array.from(transfers));\n  }\n\n  function onError(error) {\n    throw error;\n  }\n\n  self.onmessage = e => {\n    if (e.data && e.data.xvizConfig) {\n      setXVIZConfig(e.data.xvizConfig);\n    } else if (e.data) {\n      parseStreamDataMessage(e.data, onResult, onError);\n    }\n  };\n};\n"],"file":"stream-data-worker.js"}