function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import styled from '@emotion/styled';
import { evaluateStyle } from '../shared/theme';
export var Container = styled.div(function (props) {
  return _objectSpread({}, props.theme.__reset__, evaluateStyle(props.userStyle, props));
});
export var Expander = styled.div(function (props) {
  return _objectSpread({
    position: 'absolute',
    cursor: 'pointer',
    left: -20,
    top: 4,
    width: 16,
    height: 16,
    color: props.theme.controlColorPrimary,
    '&:hover': {
      color: props.theme.controlColorHovered
    },
    path: {
      fill: 'currentColor'
    }
  }, evaluateStyle(props.userStyle, props));
});
export var Title = styled.div(function (props) {
  return _objectSpread({
    marginTop: props.theme.spacingNormal,
    marginBottom: props.theme.spacingNormal,
    fontSize: props.theme.fontSize * 2,
    fontWeight: 200
  }, evaluateStyle(props.userStyle, props));
});
export var Heading = styled.div(function (props) {
  return _objectSpread({
    marginTop: props.theme.spacingNormal,
    marginBottom: props.theme.spacingNormal,
    fontSize: props.theme.fontSize * 1.2,
    fontWeight: 600
  }, evaluateStyle(props.userStyle, props));
});
export var Separator = styled.div(function (props) {
  return _objectSpread({
    width: '100%',
    height: 1,
    background: props.theme.controlColorSecondary
  }, evaluateStyle(props.userStyle, props));
});
//# sourceMappingURL=styled-components.js.map