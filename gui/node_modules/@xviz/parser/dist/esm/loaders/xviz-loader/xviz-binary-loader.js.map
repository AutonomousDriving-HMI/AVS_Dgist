{"version":3,"sources":["../../../../src/loaders/xviz-loader/xviz-binary-loader.js"],"names":["GLTFParser","MAGIC_XVIZ","MAGIC_GLTF","BE","parseBinaryXVIZ","arrayBuffer","gltfParser","parse","createImages","getApplicationData","isBinaryXVIZ","isArrayBuffer","ArrayBuffer","isGLB","magic","glbArrayBuffer","options","dataView","DataView","magic1","getUint32"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,UAAR,QAAyB,kBAAzB;AAEA,IAAMC,UAAU,GAAG,UAAnB,C,CAA+B;;AAC/B,IAAMC,UAAU,GAAG,UAAnB,C,CAA+B;;AAC/B,IAAMC,EAAE,GAAG,KAAX,C,CAAkB;;AAElB,OAAO,SAASC,eAAT,CAAyBC,WAAzB,EAAsC;AAC3C,MAAMC,UAAU,GAAG,IAAIN,UAAJ,EAAnB;AACAM,EAAAA,UAAU,CAACC,KAAX,CAAiBF,WAAjB,EAA8B;AAACG,IAAAA,YAAY,EAAE;AAAf,GAA9B,EAF2C,CAI3C;;AACA,SAAOF,UAAU,CAACG,kBAAX,CAA8B,MAA9B,CAAP;AACD;AAED,OAAO,SAASC,YAAT,CAAsBL,WAAtB,EAAmC;AACxC,MAAMM,aAAa,GAAGN,WAAW,YAAYO,WAA7C;AACA,SAAOD,aAAa,IAAIE,KAAK,CAACR,WAAD,EAAc;AAACS,IAAAA,KAAK,EAAEb;AAAR,GAAd,CAA7B;AACD,C,CAED;;AACA,SAASY,KAAT,CAAeE,cAAf,EAA6C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAAA,uBACdA,OADc,CACpCF,KADoC;AAAA,MACpCA,KADoC,+BAC5BZ,UAD4B,mBAG3C;;AACA,MAAMe,QAAQ,GAAG,IAAIC,QAAJ,CAAaH,cAAb,CAAjB;AACA,MAAMI,MAAM,GAAGF,QAAQ,CAACG,SAAT,CAAmB,CAAnB,EAAsBjB,EAAtB,CAAf,CAL2C,CAKD;;AAE1C,SAAOgB,MAAM,KAAKL,KAAX,IAAoBK,MAAM,KAAKjB,UAAtC;AACD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GLTFParser} from '@loaders.gl/gltf';\n\nconst MAGIC_XVIZ = 0x5856495a; // XVIZ in Big-Endian ASCII\nconst MAGIC_GLTF = 0x676c5446; // glTF in Big-Endian ASCII\nconst BE = false; // Magic needs to be written as BE\n\nexport function parseBinaryXVIZ(arrayBuffer) {\n  const gltfParser = new GLTFParser();\n  gltfParser.parse(arrayBuffer, {createImages: false});\n\n  // TODO/ib - Fix when loaders.gl API is fixed\n  return gltfParser.getApplicationData('xviz');\n}\n\nexport function isBinaryXVIZ(arrayBuffer) {\n  const isArrayBuffer = arrayBuffer instanceof ArrayBuffer;\n  return isArrayBuffer && isGLB(arrayBuffer, {magic: MAGIC_XVIZ});\n}\n\n// TODO - Replace with GLBParser.isGLB()\nfunction isGLB(glbArrayBuffer, options = {}) {\n  const {magic = MAGIC_GLTF} = options;\n\n  // GLB Header\n  const dataView = new DataView(glbArrayBuffer);\n  const magic1 = dataView.getUint32(0, BE); // Magic number (the ASCII string 'glTF').\n\n  return magic1 === magic || magic1 === MAGIC_GLTF;\n}\n"],"file":"xviz-binary-loader.js"}