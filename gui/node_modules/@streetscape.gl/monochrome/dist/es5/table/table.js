"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Table = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _AutoSizer = _interopRequireDefault(require("react-virtualized/dist/commonjs/AutoSizer"));

var _List = _interopRequireDefault(require("react-virtualized/dist/commonjs/List"));

var _CellMeasurer = _interopRequireWildcard(require("react-virtualized/dist/commonjs/CellMeasurer"));

var _theme = require("../shared/theme");

var _tableHeader = _interopRequireDefault(require("./table-header"));

var _tableRow = _interopRequireDefault(require("./table-row"));

var _styledComponents = require("./styled-components");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Table =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Table, _PureComponent);

  function Table(props) {
    var _this;

    _classCallCheck(this, Table);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_onHeaderResize", function (columns) {
      _this.setState({
        columns: columns
      }, _this._forceUpdate);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_onSort", function (sortFunc) {
      var rows = _this.state.rows;

      if (sortFunc) {
        rows.sort(sortFunc);
      }

      _this.setState({
        sortFunc: sortFunc
      });

      _this._forceUpdate();
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_forceUpdate", function () {
      if (_this._list) {
        _this._cache.clearAll();

        _this._list.recomputeRowHeights();
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_renderRowMeasurer", function (_ref) {
      var key = _ref.key,
          parent = _ref.parent,
          index = _ref.index,
          style = _ref.style;
      return _react.default.createElement(_CellMeasurer.default, {
        cache: _this._cache,
        parent: parent,
        key: key,
        rowIndex: index,
        collumnIndex: 0
      }, function () {
        return _this._renderRow({
          key: key,
          index: index,
          style: style
        });
      });
    });

    _this.state = {
      columns: null,
      sortFunc: null,
      rows: _this._formatRows(props.rows)
    };
    _this._cache = new _CellMeasurer.CellMeasurerCache({
      fixedWidth: true
    });
    return _this;
  }

  _createClass(Table, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      if (this.props.rows !== nextProps.rows) {
        this.setState({
          rows: this._formatRows(nextProps.rows, this.state.sortFunc)
        });

        this._forceUpdate();
      }
    }
  }, {
    key: "_formatRows",
    value: function _formatRows(rows, sortFunc) {
      rows = rows.map(function (row, rowIndex) {
        return {
          srcObject: row,
          data: row.data,
          children: row.children,
          id: String(rowIndex)
        };
      });

      if (sortFunc) {
        rows.sort(sortFunc);
      }

      return rows;
    }
  }, {
    key: "_renderRow",
    value: function _renderRow(_ref2) {
      var key = _ref2.key,
          index = _ref2.index,
          style = _ref2.style;
      var _this$props = this.props,
          renderCell = _this$props.renderCell,
          theme = _this$props.theme,
          userStyle = _this$props.style;
      var row = this.state.rows[index];
      return _react.default.createElement(_tableRow.default, {
        key: key,
        id: row.id,
        index: index,
        data: row,
        style: style,
        theme: theme,
        userStyle: userStyle,
        renderCell: renderCell,
        columns: this.state.columns
      });
    }
  }, {
    key: "_renderBody",
    // AutoSizer is a pure component. By default child function is only called if dimensions change.
    // Rebind this function every render to respond to state change
    value: function _renderBody(_ref3) {
      var _this2 = this;

      var width = _ref3.width,
          height = _ref3.height;
      var _this$state = this.state,
          columns = _this$state.columns,
          rows = _this$state.rows;

      if (!columns) {
        return null;
      }

      return _react.default.createElement(_List.default, {
        ref: function ref(list) {
          _this2._list = list;
        },
        tabIndex: null,
        height: height,
        rowCount: rows.length,
        rowHeight: this._cache.rowHeight,
        rowRenderer: this._renderRowMeasurer,
        width: width
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          theme = _this$props2.theme,
          width = _this$props2.width,
          height = _this$props2.height,
          style = _this$props2.style,
          columns = _this$props2.columns,
          renderHeader = _this$props2.renderHeader;
      return _react.default.createElement(_styledComponents.WrapperComponent, {
        style: {
          width: width,
          height: height
        },
        theme: theme,
        userStyle: style.wrapper
      }, _react.default.createElement(_tableHeader.default, {
        theme: theme,
        userStyle: style,
        columns: columns,
        renderHeader: renderHeader,
        onSort: this._onSort,
        onResize: this._onHeaderResize
      }), _react.default.createElement(_styledComponents.TableBody, {
        theme: theme,
        userStyle: style.body
      }, _react.default.createElement(_AutoSizer.default, null, this._renderBody.bind(this))));
    }
  }]);

  return Table;
}(_react.PureComponent);

exports.Table = Table;

_defineProperty(Table, "propTypes", {
  width: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  height: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  style: _propTypes.default.object,
  columns: _propTypes.default.array,
  rows: _propTypes.default.array,
  renderHeader: _propTypes.default.func,
  renderCell: _propTypes.default.func
});

_defineProperty(Table, "defaultProps", {
  width: '100%',
  height: 400,
  style: {},
  rows: [],
  renderHeader: function renderHeader(_ref4) {
    var column = _ref4.column;
    return column.name;
  },
  renderCell: function renderCell(_ref5) {
    var value = _ref5.value;
    return value === null ? null : String(value);
  }
});

var _default = (0, _theme.withTheme)(Table);

exports.default = _default;
//# sourceMappingURL=table.js.map