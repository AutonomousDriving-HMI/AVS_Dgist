function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import styled from '@emotion/styled';
import { keyframes } from '@emotion/core';
import { withTheme, evaluateStyle } from '../theme';
const spin = keyframes`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`;
const PreLoader = styled.div(props => _objectSpread({
  width: props.size,
  height: props.size,
  marginLeft: -props.size / 2,
  marginTop: props.theme.spacingNormal,
  marginBottom: props.theme.spacingNormal,
  left: '50%',
  borderRadius: '50%',
  position: 'absolute',
  borderStyle: 'solid',
  borderWidth: 2,
  borderColor: props.theme.controlColorActive,
  clipPath: 'polygon(50% 0%, 50% 50%, 100% 0%, 100% 100%, 0% 100%, 0% 0%)',
  animation: `${spin} 1s ease infinite`
}, evaluateStyle(props.userStyle, props)));

class Spinner extends PureComponent {
  render() {
    const _this$props = this.props,
          theme = _this$props.theme,
          style = _this$props.style;
    const _style$size = style.size,
          size = _style$size === void 0 ? 32 : _style$size;
    return React.createElement(PreLoader, {
      size: size,
      theme: theme,
      userStyle: style
    });
  }

}

_defineProperty(Spinner, "propTypes", {
  style: PropTypes.object
});

_defineProperty(Spinner, "defaultProps", {
  style: {}
});

export default withTheme(Spinner);
//# sourceMappingURL=index.js.map