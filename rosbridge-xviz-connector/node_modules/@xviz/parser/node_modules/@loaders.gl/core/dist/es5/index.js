"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "setPathPrefix", {
  enumerable: true,
  get: function get() {
    return _fileAliases.setPathPrefix;
  }
});
Object.defineProperty(exports, "getPathPrefix", {
  enumerable: true,
  get: function get() {
    return _fileAliases.getPathPrefix;
  }
});
Object.defineProperty(exports, "resolvePath", {
  enumerable: true,
  get: function get() {
    return _fileAliases.resolvePath;
  }
});
Object.defineProperty(exports, "readFile", {
  enumerable: true,
  get: function get() {
    return _readFile.readFile;
  }
});
Object.defineProperty(exports, "readFileSync", {
  enumerable: true,
  get: function get() {
    return _readFile.readFileSync;
  }
});
Object.defineProperty(exports, "createReadStream", {
  enumerable: true,
  get: function get() {
    return _createStream.createReadStream;
  }
});
Object.defineProperty(exports, "parseFile", {
  enumerable: true,
  get: function get() {
    return _parseFile.parseFile;
  }
});
Object.defineProperty(exports, "parseFileSync", {
  enumerable: true,
  get: function get() {
    return _parseFile.parseFileSync;
  }
});
Object.defineProperty(exports, "parseFileAsIterator", {
  enumerable: true,
  get: function get() {
    return _parseFile.parseFileAsIterator;
  }
});
Object.defineProperty(exports, "parseFileAsAsyncIterator", {
  enumerable: true,
  get: function get() {
    return _parseFile.parseFileAsAsyncIterator;
  }
});
Object.defineProperty(exports, "loadFile", {
  enumerable: true,
  get: function get() {
    return _loadFile.loadFile;
  }
});
Object.defineProperty(exports, "loadFileSync", {
  enumerable: true,
  get: function get() {
    return _loadFile.loadFileSync;
  }
});
Object.defineProperty(exports, "loadImage", {
  enumerable: true,
  get: function get() {
    return _loadImage.loadImage;
  }
});
Object.defineProperty(exports, "encodeFile", {
  enumerable: true,
  get: function get() {
    return _encodeFile.encodeFile;
  }
});
Object.defineProperty(exports, "encodeFileSync", {
  enumerable: true,
  get: function get() {
    return _encodeFile.encodeFileSync;
  }
});
Object.defineProperty(exports, "encodeToStream", {
  enumerable: true,
  get: function get() {
    return _encodeFile.encodeToStream;
  }
});
Object.defineProperty(exports, "writeFile", {
  enumerable: true,
  get: function get() {
    return _writeFile.writeFile;
  }
});
Object.defineProperty(exports, "writeFileSync", {
  enumerable: true,
  get: function get() {
    return _writeFile.writeFileSync;
  }
});
Object.defineProperty(exports, "saveFile", {
  enumerable: true,
  get: function get() {
    return _saveFile.saveFile;
  }
});
Object.defineProperty(exports, "saveFileSync", {
  enumerable: true,
  get: function get() {
    return _saveFile.saveFileSync;
  }
});
Object.defineProperty(exports, "TextDecoder", {
  enumerable: true,
  get: function get() {
    return _textEncoding.TextDecoder;
  }
});
Object.defineProperty(exports, "TextEncoder", {
  enumerable: true,
  get: function get() {
    return _textEncoding.TextEncoder;
  }
});
Object.defineProperty(exports, "isArrayBuffer", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.isArrayBuffer;
  }
});
Object.defineProperty(exports, "isBuffer", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.isBuffer;
  }
});
Object.defineProperty(exports, "isBlob", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.isBlob;
  }
});
Object.defineProperty(exports, "toArrayBuffer", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.toArrayBuffer;
  }
});
Object.defineProperty(exports, "blobToArrayBuffer", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.blobToArrayBuffer;
  }
});
Object.defineProperty(exports, "toBuffer", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.toBuffer;
  }
});
Object.defineProperty(exports, "toDataView", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.toDataView;
  }
});
Object.defineProperty(exports, "padTo4Bytes", {
  enumerable: true,
  get: function get() {
    return _memoryCopyUtils.padTo4Bytes;
  }
});
Object.defineProperty(exports, "copyToArray", {
  enumerable: true,
  get: function get() {
    return _memoryCopyUtils.copyToArray;
  }
});
Object.defineProperty(exports, "copyArrayBuffer", {
  enumerable: true,
  get: function get() {
    return _memoryCopyUtils.copyArrayBuffer;
  }
});
Object.defineProperty(exports, "flattenToTypedArray", {
  enumerable: true,
  get: function get() {
    return _flattenToTypedArray.flattenToTypedArray;
  }
});
Object.defineProperty(exports, "isImage", {
  enumerable: true,
  get: function get() {
    return _getImageSize.isImage;
  }
});
Object.defineProperty(exports, "getImageSize", {
  enumerable: true,
  get: function get() {
    return _getImageSize.getImageSize;
  }
});
Object.defineProperty(exports, "ImageBitmapLoader", {
  enumerable: true,
  get: function get() {
    return _imageLoaders.ImageBitmapLoader;
  }
});
Object.defineProperty(exports, "HTMLImageLoader", {
  enumerable: true,
  get: function get() {
    return _imageLoaders.HTMLImageLoader;
  }
});
Object.defineProperty(exports, "PlatformImageLoader", {
  enumerable: true,
  get: function get() {
    return _imageLoaders.PlatformImageLoader;
  }
});
Object.defineProperty(exports, "getAccessorTypeFromSize", {
  enumerable: true,
  get: function get() {
    return _gltfTypeUtils.getAccessorTypeFromSize;
  }
});
Object.defineProperty(exports, "getComponentTypeFromArray", {
  enumerable: true,
  get: function get() {
    return _gltfTypeUtils.getComponentTypeFromArray;
  }
});
Object.defineProperty(exports, "getGLTFAttribute", {
  enumerable: true,
  get: function get() {
    return _gltfAttributeUtils.getGLTFAttribute;
  }
});
Object.defineProperty(exports, "getGLTFAccessors", {
  enumerable: true,
  get: function get() {
    return _gltfAttributeUtils.getGLTFAccessors;
  }
});
Object.defineProperty(exports, "getGLTFIndices", {
  enumerable: true,
  get: function get() {
    return _gltfAttributeUtils.getGLTFIndices;
  }
});
Object.defineProperty(exports, "getGLTFAttributeMap", {
  enumerable: true,
  get: function get() {
    return _gltfAttributeUtils.getGLTFAttributeMap;
  }
});
Object.defineProperty(exports, "assert", {
  enumerable: true,
  get: function get() {
    return _assert.default;
  }
});
Object.defineProperty(exports, "isBrowser", {
  enumerable: true,
  get: function get() {
    return _globals.isBrowser;
  }
});
Object.defineProperty(exports, "self", {
  enumerable: true,
  get: function get() {
    return _globals.self;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function get() {
    return _globals.window;
  }
});
Object.defineProperty(exports, "global", {
  enumerable: true,
  get: function get() {
    return _globals.global;
  }
});
Object.defineProperty(exports, "document", {
  enumerable: true,
  get: function get() {
    return _globals.document;
  }
});
Object.defineProperty(exports, "createWorker", {
  enumerable: true,
  get: function get() {
    return _createWorker.default;
  }
});
Object.defineProperty(exports, "_parseWithWorker", {
  enumerable: true,
  get: function get() {
    return _parseWithWorker.default;
  }
});
Object.defineProperty(exports, "isPromise", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.isPromise;
  }
});
Object.defineProperty(exports, "isIterable", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.isIterable;
  }
});
Object.defineProperty(exports, "isAsyncIterable", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.isAsyncIterable;
  }
});
Object.defineProperty(exports, "forEach", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.forEach;
  }
});
Object.defineProperty(exports, "concatenateAsyncIterator", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.concatenateAsyncIterator;
  }
});
Object.defineProperty(exports, "lineAsyncIterator", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.lineAsyncIterator;
  }
});
Object.defineProperty(exports, "textDecoderAsyncIterator", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.textDecoderAsyncIterator;
  }
});
Object.defineProperty(exports, "numberedLineAsyncIterator", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.numberedLineAsyncIterator;
  }
});
Object.defineProperty(exports, "getStreamIterator", {
  enumerable: true,
  get: function get() {
    return _streamUtils.getStreamIterator;
  }
});
Object.defineProperty(exports, "_getMeshSize", {
  enumerable: true,
  get: function get() {
    return _meshUtils.getMeshSize;
  }
});
Object.defineProperty(exports, "_autoDetectLoader", {
  enumerable: true,
  get: function get() {
    return _autoDetectLoader.autoDetectLoader;
  }
});

var _fileAliases = require("./read-file/file-aliases.js");

var _readFile = require("./read-file/read-file");

var _createStream = require("./read-file/create-stream");

var _parseFile = require("./parse-file/parse-file");

var _loadFile = require("./load-file/load-file");

var _loadImage = require("./load-file/load-image");

var _encodeFile = require("./encode-file/encode-file");

var _writeFile = require("./write-file/write-file");

var _saveFile = require("./save-file/save-file");

var _textEncoding = require("./binary-utils/text-encoding");

var _binaryUtils = require("./binary-utils/binary-utils");

var _memoryCopyUtils = require("./binary-utils/memory-copy-utils");

var _flattenToTypedArray = require("./binary-utils/flatten-to-typed-array");

var _getImageSize = require("./image-utils/get-image-size");

var _imageLoaders = require("./image-utils/image-loaders");

var _gltfTypeUtils = require("./mesh-utils/gltf-type-utils");

var _gltfAttributeUtils = require("./mesh-utils/gltf-attribute-utils");

var _assert = _interopRequireDefault(require("./utils/assert"));

var _globals = require("./utils/globals");

var _createWorker = _interopRequireDefault(require("./worker-utils/create-worker"));

var _parseWithWorker = _interopRequireDefault(require("./worker-utils/parse-with-worker"));

var _asyncIteratorUtils = require("./async-iterator-utils/async-iterator-utils");

var _streamUtils = require("./async-iterator-utils/stream-utils");

var _meshUtils = require("./mesh-utils/mesh-utils");

var _autoDetectLoader = require("./parse-file/auto-detect-loader");
//# sourceMappingURL=index.js.map