{"version":3,"sources":["../../../../src/components/declarative-ui/xviz-metric.js"],"names":["React","PureComponent","PropTypes","MetricCard","MetricChart","DEFAULT_COLOR_SERIES","connectToLog","defaultFormatValue","x","Number","isFinite","toFixed","String","XVIZMetricComponent","props","onClick","log","seek","streams","timeSeries","data","sampleSeries","forEach","streamName","i","dataSeries","valueSeries","getX","getY","unit","isLoading","title","description","startTime","endTime","currentTime","width","height","style","xTicks","yTicks","formatXTick","formatYTick","formatValue","horizontalGridLines","verticalGridLines","getColor","timeDomain","_extractDataProps","_onClick","object","oneOfType","string","number","func","arrayOf","objectOf","shape","array","margin","left","right","top","bottom","getLogState","getCurrentTime","getTimeSeries","getBufferStart","getBufferEnd","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,4BAAtC;AAEA,SAAQC,oBAAR,QAAmC,aAAnC;AACA,OAAOC,YAAP,MAAyB,YAAzB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,CAAC;AAAA,SAAKC,MAAM,CAACC,QAAP,CAAgBF,CAAhB,IAAqBA,CAAC,CAACG,OAAF,CAAU,CAAV,CAArB,GAAoCC,MAAM,CAACJ,CAAD,CAA/C;AAAA,CAA5B;;IAEMK,mB;;;;;;;;;;;;;;;;;;uFAkDO,UAAAL,CAAC,EAAI;AAAA,wBACS,MAAKM,KADd;AAAA,UACPC,OADO,eACPA,OADO;AAAA,UACEC,GADF,eACEA,GADF;;AAEd,UAAID,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACP,CAAD,CAAP;AACD,OAFD,MAEO,IAAIQ,GAAJ,EAAS;AACdA,QAAAA,GAAG,CAACC,IAAJ,CAAST,CAAT;AACD;AACF,K;;;;;;;wCAEmB;AAAA,yBACY,KAAKM,KADjB;AAAA,UACXI,OADW,gBACXA,OADW;AAAA,UACFC,UADE,gBACFA,UADE;AAGlB,UAAMC,IAAI,GAAG,EAAb;AACA,UAAIC,YAAY,GAAG,IAAnB;AACAH,MAAAA,OAAO,CAACI,OAAR,CAAgB,UAACC,UAAD,EAAaC,CAAb,EAAmB;AACjC,YAAMC,UAAU,GAAGN,UAAU,CAACI,UAAD,CAA7B;;AACA,YAAIE,UAAJ,EAAgB;AACdJ,UAAAA,YAAY,GAAGI,UAAf;AACAL,UAAAA,IAAI,CAACG,UAAD,CAAJ,GAAmBE,UAAU,CAACC,WAA9B;AACD;AACF,OAND;AAQA,aAAOL,YAAY,GACf;AACEM,QAAAA,IAAI,EAAEN,YAAY,CAACM,IADrB;AAEEC,QAAAA,IAAI,EAAEP,YAAY,CAACO,IAFrB;AAGEC,QAAAA,IAAI,EAAER,YAAY,CAACQ,IAHrB;AAIET,QAAAA,IAAI,EAAJA;AAJF,OADe,GAOf;AACEU,QAAAA,SAAS,EAAE;AADb,OAPJ;AAUD;;;6BAEQ;AAAA,yBAkBH,KAAKhB,KAlBF;AAAA,UAELiB,KAFK,gBAELA,KAFK;AAAA,UAGLC,WAHK,gBAGLA,WAHK;AAAA,UAILC,SAJK,gBAILA,SAJK;AAAA,UAKLC,OALK,gBAKLA,OALK;AAAA,UAMLC,WANK,gBAMLA,WANK;AAAA,UAOLC,KAPK,gBAOLA,KAPK;AAAA,UAQLC,MARK,gBAQLA,MARK;AAAA,UASLC,KATK,gBASLA,KATK;AAAA,UAULC,MAVK,gBAULA,MAVK;AAAA,UAWLC,MAXK,gBAWLA,MAXK;AAAA,UAYLC,WAZK,gBAYLA,WAZK;AAAA,UAaLC,WAbK,gBAaLA,WAbK;AAAA,UAcLC,WAdK,gBAcLA,WAdK;AAAA,UAeLC,mBAfK,gBAeLA,mBAfK;AAAA,UAgBLC,iBAhBK,gBAgBLA,iBAhBK;AAAA,UAiBLC,QAjBK,gBAiBLA,QAjBK;AAmBP,UAAMhB,SAAS,GAAGK,WAAW,KAAK,IAAlC;AACA,UAAMY,UAAU,GAAGtC,MAAM,CAACC,QAAP,CAAgBuB,SAAhB,IAA6B,CAACA,SAAD,EAAYC,OAAZ,CAA7B,GAAoD,IAAvE;AAEA,aACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEH,KAAnB;AAA0B,QAAA,WAAW,EAAEC,WAAvC;AAAoD,QAAA,SAAS,EAAEF,SAA/D;AAA0E,QAAA,KAAK,EAAEQ;AAAjF,SACG,CAACR,SAAD,IACC,oBAAC,WAAD,eACM,KAAKkB,iBAAL,EADN;AAEE,QAAA,QAAQ,EAAEF,QAFZ;AAGE,QAAA,UAAU,EAAEX,WAHd;AAIE,QAAA,KAAK,EAAEC,KAJT;AAKE,QAAA,MAAM,EAAEC,MALV;AAME,QAAA,KAAK,EAAEC,KANT;AAOE,QAAA,MAAM,EAAEC,MAPV;AAQE,QAAA,MAAM,EAAEC,MARV;AASE,QAAA,WAAW,EAAEC,WATf;AAUE,QAAA,WAAW,EAAEC,WAVf;AAWE,QAAA,WAAW,EAAEC,WAXf;AAYE,QAAA,OAAO,EAAEI,UAZX;AAaE,QAAA,OAAO,EAAE,KAAKE,QAbhB;AAcE,QAAA,mBAAmB,EAAEL,mBAdvB;AAeE,QAAA,iBAAiB,EAAEC;AAfrB,SAFJ,CADF;AAuBD;;;;EAjI+B5C,a;;gBAA5BY,mB,eACe;AACjB;AACAyB,EAAAA,KAAK,EAAEpC,SAAS,CAACgD,MAFA;AAGjBd,EAAAA,KAAK,EAAElC,SAAS,CAACiD,SAAV,CAAoB,CAACjD,SAAS,CAACkD,MAAX,EAAmBlD,SAAS,CAACmD,MAA7B,CAApB,CAHU;AAIjBhB,EAAAA,MAAM,EAAEnC,SAAS,CAACiD,SAAV,CAAoB,CAACjD,SAAS,CAACkD,MAAX,EAAmBlD,SAAS,CAACmD,MAA7B,CAApB,CAJS;AAKjBP,EAAAA,QAAQ,EAAE5C,SAAS,CAACiD,SAAV,CAAoB,CAACjD,SAAS,CAACoD,IAAX,EAAiBpD,SAAS,CAACkD,MAA3B,EAAmClD,SAAS,CAACgD,MAA7C,CAApB,CALO;AAMjBX,EAAAA,MAAM,EAAErC,SAAS,CAACmD,MAND;AAOjBb,EAAAA,MAAM,EAAEtC,SAAS,CAACmD,MAPD;AAQjBZ,EAAAA,WAAW,EAAEvC,SAAS,CAACoD,IARN;AASjBZ,EAAAA,WAAW,EAAExC,SAAS,CAACoD,IATN;AAUjBX,EAAAA,WAAW,EAAEzC,SAAS,CAACoD,IAVN;AAWjBV,EAAAA,mBAAmB,EAAE1C,SAAS,CAACmD,MAXd;AAYjBR,EAAAA,iBAAiB,EAAE3C,SAAS,CAACmD,MAZZ;AAajBtC,EAAAA,OAAO,EAAEb,SAAS,CAACoD,IAbF;AAejB;AACApC,EAAAA,OAAO,EAAEhB,SAAS,CAACqD,OAAV,CAAkBrD,SAAS,CAACkD,MAA5B,CAhBQ;AAiBjBrB,EAAAA,KAAK,EAAE7B,SAAS,CAACkD,MAjBA;AAkBjBpB,EAAAA,WAAW,EAAE9B,SAAS,CAACkD,MAlBN;AAoBjB;AACAjB,EAAAA,WAAW,EAAEjC,SAAS,CAACmD,MArBN;AAsBjBlC,EAAAA,UAAU,EAAEjB,SAAS,CAACsD,QAAV,CACVtD,SAAS,CAACuD,KAAV,CAAgB;AACdrC,IAAAA,IAAI,EAAElB,SAAS,CAACwD,KADF;AAEd/B,IAAAA,IAAI,EAAEzB,SAAS,CAACoD,IAFF;AAGd1B,IAAAA,IAAI,EAAE1B,SAAS,CAACoD,IAHF;AAIdzB,IAAAA,IAAI,EAAE3B,SAAS,CAACkD;AAJF,GAAhB,CADU,CAtBK;AA8BjBnB,EAAAA,SAAS,EAAE/B,SAAS,CAACmD,MA9BJ;AA+BjBnB,EAAAA,OAAO,EAAEhC,SAAS,CAACmD;AA/BF,C;;gBADfxC,mB,kBAmCkB;AACpBM,EAAAA,UAAU,EAAE,EADQ;AAEpBiB,EAAAA,KAAK,EAAE,MAFa;AAGpBC,EAAAA,MAAM,EAAE,GAHY;AAIpBC,EAAAA,KAAK,EAAE;AACLqB,IAAAA,MAAM,EAAE;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE,EAAlB;AAAsBC,MAAAA,GAAG,EAAE,EAA3B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC;AADH,GAJa;AAOpBxB,EAAAA,MAAM,EAAE,CAPY;AAQpBC,EAAAA,MAAM,EAAE,CARY;AASpBG,EAAAA,WAAW,EAAEpC,kBATO;AAUpBqC,EAAAA,mBAAmB,EAAE,CAVD;AAWpBC,EAAAA,iBAAiB,EAAE,CAXC;AAYpBC,EAAAA,QAAQ,EAAEzC;AAZU,C;;AAiGxB,IAAM2D,WAAW,GAAG,SAAdA,WAAc,CAAAhD,GAAG;AAAA,SAAK;AAC1BmB,IAAAA,WAAW,EAAEnB,GAAG,CAACiD,cAAJ,EADa;AAE1B9C,IAAAA,UAAU,EAAEH,GAAG,CAACkD,aAAJ,EAFc;AAG1BjC,IAAAA,SAAS,EAAEjB,GAAG,CAACmD,cAAJ,EAHe;AAI1BjC,IAAAA,OAAO,EAAElB,GAAG,CAACoD,YAAJ;AAJiB,GAAL;AAAA,CAAvB;;AAOA,eAAe9D,YAAY,CAAC;AAAC0D,EAAAA,WAAW,EAAXA,WAAD;AAAcK,EAAAA,SAAS,EAAExD;AAAzB,CAAD,CAA3B","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {MetricCard, MetricChart} from '@streetscape.gl/monochrome';\n\nimport {DEFAULT_COLOR_SERIES} from './constants';\nimport connectToLog from '../connect';\n\nconst defaultFormatValue = x => (Number.isFinite(x) ? x.toFixed(3) : String(x));\n\nclass XVIZMetricComponent extends PureComponent {\n  static propTypes = {\n    // User configuration\n    style: PropTypes.object,\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    getColor: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]),\n    xTicks: PropTypes.number,\n    yTicks: PropTypes.number,\n    formatXTick: PropTypes.func,\n    formatYTick: PropTypes.func,\n    formatValue: PropTypes.func,\n    horizontalGridLines: PropTypes.number,\n    verticalGridLines: PropTypes.number,\n    onClick: PropTypes.func,\n\n    // From declarative UI metric component\n    streams: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n    description: PropTypes.string,\n\n    // From connected log\n    currentTime: PropTypes.number,\n    timeSeries: PropTypes.objectOf(\n      PropTypes.shape({\n        data: PropTypes.array,\n        getX: PropTypes.func,\n        getY: PropTypes.func,\n        unit: PropTypes.string\n      })\n    ),\n    startTime: PropTypes.number,\n    endTime: PropTypes.number\n  };\n\n  static defaultProps = {\n    timeSeries: {},\n    width: '100%',\n    height: 160,\n    style: {\n      margin: {left: 45, right: 10, top: 10, bottom: 20}\n    },\n    xTicks: 0,\n    yTicks: 3,\n    formatValue: defaultFormatValue,\n    horizontalGridLines: 3,\n    verticalGridLines: 0,\n    getColor: DEFAULT_COLOR_SERIES\n  };\n\n  _onClick = x => {\n    const {onClick, log} = this.props;\n    if (onClick) {\n      onClick(x);\n    } else if (log) {\n      log.seek(x);\n    }\n  };\n\n  _extractDataProps() {\n    const {streams, timeSeries} = this.props;\n\n    const data = {};\n    let sampleSeries = null;\n    streams.forEach((streamName, i) => {\n      const dataSeries = timeSeries[streamName];\n      if (dataSeries) {\n        sampleSeries = dataSeries;\n        data[streamName] = dataSeries.valueSeries;\n      }\n    });\n\n    return sampleSeries\n      ? {\n          getX: sampleSeries.getX,\n          getY: sampleSeries.getY,\n          unit: sampleSeries.unit,\n          data\n        }\n      : {\n          isLoading: true\n        };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      startTime,\n      endTime,\n      currentTime,\n      width,\n      height,\n      style,\n      xTicks,\n      yTicks,\n      formatXTick,\n      formatYTick,\n      formatValue,\n      horizontalGridLines,\n      verticalGridLines,\n      getColor\n    } = this.props;\n    const isLoading = currentTime === null;\n    const timeDomain = Number.isFinite(startTime) ? [startTime, endTime] : null;\n\n    return (\n      <MetricCard title={title} description={description} isLoading={isLoading} style={style}>\n        {!isLoading && (\n          <MetricChart\n            {...this._extractDataProps()}\n            getColor={getColor}\n            highlightX={currentTime}\n            width={width}\n            height={height}\n            style={style}\n            xTicks={xTicks}\n            yTicks={yTicks}\n            formatXTick={formatXTick}\n            formatYTick={formatYTick}\n            formatValue={formatValue}\n            xDomain={timeDomain}\n            onClick={this._onClick}\n            horizontalGridLines={horizontalGridLines}\n            verticalGridLines={verticalGridLines}\n          />\n        )}\n      </MetricCard>\n    );\n  }\n}\n\nconst getLogState = log => ({\n  currentTime: log.getCurrentTime(),\n  timeSeries: log.getTimeSeries(),\n  startTime: log.getBufferStart(),\n  endTime: log.getBufferEnd()\n});\n\nexport default connectToLog({getLogState, Component: XVIZMetricComponent});\n"],"file":"xviz-metric.js"}