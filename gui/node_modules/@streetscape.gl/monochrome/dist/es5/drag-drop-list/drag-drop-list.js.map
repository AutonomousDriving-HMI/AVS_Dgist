{"version":3,"sources":["../../../src/drag-drop-list/drag-drop-list.js"],"names":["noop","DragDropList","items","targetIndex","targetItem","props","boundingBoxes","map","item","boundingBox","instance","getBoundingBox","setState","slice","indexOf","removedIndex","pos","state","nextIndex","maxOverlap","targetRect","deltaX","deltaY","forEach","i","p","canRemoveItem","splice","removedItems","onListChange","content","theme","style","Boolean","wrapper","key","title","className","_onDragStart","bind","_onDragMove","_onDragEnd","renderContent","PureComponent","PropTypes","arrayOf","shape","string","oneOfType","node","func","object","bool"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport DragDropListItem from './drag-drop-list-item';\nimport {overlap, offsetRect} from './utils';\n\nimport {withTheme} from '../shared/theme';\nimport {ListContainer} from './styled-components';\n\nconst noop = () => {};\n\nclass DragDropList extends PureComponent {\n  static propTypes = {\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string,\n        className: PropTypes.string,\n        content: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n        title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.func])\n      })\n    ),\n    style: PropTypes.object,\n    canRemoveItem: PropTypes.bool,\n    onListChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    style: {},\n    canRemoveItem: false,\n    onListChange: noop\n  };\n\n  state = {\n    // Temporarily re-arranged items list, used during drag\n    items: null,\n    targetIndex: -1\n  };\n\n  _onDragStart = targetItem => {\n    const {items} = this.props;\n    // Update bounding boxes\n    // This is dependent on page scroll, needs update every time drag starts\n    const boundingBoxes = items.map(item => {\n      item.boundingBox = item.instance.getBoundingBox();\n      return item.boundingBox;\n    });\n\n    this.setState({\n      items: items.slice(),\n      boundingBoxes,\n      targetItem,\n      targetIndex: items.indexOf(targetItem),\n      removedIndex: -1\n    });\n  };\n\n  _onDragMove = pos => {\n    const {items, targetItem, boundingBoxes, targetIndex} = this.state;\n\n    let nextIndex = -1;\n    let maxOverlap = 0;\n\n    const targetRect = offsetRect(targetItem.boundingBox, [pos.deltaX, pos.deltaY]);\n\n    boundingBoxes.forEach((boundingBox, i) => {\n      const p = overlap(boundingBox, targetRect);\n      if (p > maxOverlap) {\n        nextIndex = i;\n        maxOverlap = p;\n      }\n    });\n\n    if (nextIndex < 0) {\n      // removed\n      if (this.props.canRemoveItem) {\n        this.setState({removedIndex: targetIndex});\n      }\n    } else {\n      if (nextIndex !== targetIndex) {\n        items.splice(targetIndex, 1);\n        items.splice(nextIndex, 0, targetItem);\n      }\n      this.setState({targetIndex: nextIndex, removedIndex: -1});\n    }\n  };\n\n  _onDragEnd = pos => {\n    const {items, targetItem, removedIndex} = this.state;\n\n    const removedItems = removedIndex >= 0 ? items.splice(removedIndex, 1) : [];\n    const targetRect = offsetRect(targetItem.boundingBox, [pos.deltaX, pos.deltaY]);\n\n    this.props.onListChange({items, removedItems, targetRect});\n    this.setState({items: null});\n  };\n\n  renderContent({content}) {\n    return typeof content === 'function' ? content() : content;\n  }\n\n  render() {\n    const {theme, style} = this.props;\n    const items = this.state.items || this.props.items;\n\n    return (\n      <ListContainer\n        theme={theme}\n        isDragging={Boolean(this.state.items)}\n        isRemoving={this.state.removedIndex >= 0}\n        userStyle={style.wrapper}\n      >\n        {items &&\n          items.map((item, i) => (\n            <DragDropListItem\n              theme={theme}\n              key={item.key}\n              ref={instance => {\n                item.instance = instance;\n              }}\n              style={style}\n              title={item.title}\n              removed={i === this.state.removedIndex}\n              className={item.className}\n              onDragStart={this._onDragStart.bind(this, item)}\n              onDragMove={this._onDragMove}\n              onDragEnd={this._onDragEnd}\n            >\n              {this.renderContent(item)}\n            </DragDropListItem>\n          ))}\n      </ListContainer>\n    );\n  }\n}\n\nexport default withTheme(DragDropList);\n"],"file":"drag-drop-list.js"}