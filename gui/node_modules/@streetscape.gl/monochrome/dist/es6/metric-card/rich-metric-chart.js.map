{"version":3,"sources":["../../../src/metric-card/rich-metric-chart.js"],"names":["React","PureComponent","PropTypes","withTheme","ExpandedIcon","CollapsedIcon","CheckAltIcon","MetricChart","FilterContainer","FilterToggle","FilterItem","FilterLegend","scaleOrdinal","extent","DEFAULT_COLORS","range","MetricChartWithLegends","constructor","props","key","state","showTopSeriesOnly","dataSeries","dataVisibility","topSeriesCount","findIndex","s","setState","hoveredSeriesName","_extractDataSeries","UNSAFE_componentWillReceiveProps","nextProps","data","_getColor","getColor","formatTitle","getY","series","value","Array","isArray","displayName","yExtent","push","color","max","Math","abs","sort","s1","s2","_renderDataFilters","theme","style","slice","filter","length","filterToggle","iconCollapsed","iconExpanded","map","styleProps","name","isHovered","isActive","_isDataVisible","filterItem","_setHoveredDataName","_toggleDataVisibility","filterLegend","iconOn","iconOff","render","Object","assign","propTypes","number","defaultProps"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {withTheme} from '../shared/theme';\nimport {ExpandedIcon, CollapsedIcon, CheckAltIcon} from '../shared/icons';\nimport MetricChart from './metric-chart';\nimport {FilterContainer, FilterToggle, FilterItem, FilterLegend} from './styled-components';\n\nimport {scaleOrdinal} from 'd3-scale';\nimport {extent} from 'd3-array';\n\nconst DEFAULT_COLORS = scaleOrdinal().range([\n  '#12939A',\n  '#DDB27C',\n  '#88572C',\n  '#FF991F',\n  '#F15C17',\n  '#223F9A',\n  '#DA70BF',\n  '#125C77',\n  '#4DC19C',\n  '#776E57',\n  '#17B8BE',\n  '#F6D18A',\n  '#B7885E',\n  '#FFCB99',\n  '#F89570',\n  '#829AE3',\n  '#E79FD5',\n  '#1E96BE',\n  '#89DAC1',\n  '#B3AD9E'\n]);\n\n/**\n * A component that visualizes the multiple data series. Features:\n * Each data series is shown as a line series\n * Clicking on the legend toggles the visibility of that data series\n * Legends are sorted by prominence (maximum value in the look ahead window)\n * A show all/show less button to toggle only showing the top 5 data series by value\n */\nclass MetricChartWithLegends extends PureComponent {\n  static propTypes = Object.assign({}, MetricChart.propTypes, {\n    topSeriesCount: PropTypes.number\n  });\n\n  static defaultProps = Object.assign({}, MetricChart.defaultProps, {\n    topSeriesCount: 5,\n    getColor: DEFAULT_COLORS\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSeries: this._extractDataSeries(props),\n      dataVisibility: {},\n      showTopSeriesOnly: true,\n      hoveredSeriesName: null\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.data !== nextProps.data) {\n      this.setState({\n        dataSeries: this._extractDataSeries(nextProps)\n      });\n    }\n  }\n\n  _getColor(key) {\n    const {getColor} = this.props;\n\n    switch (typeof getColor) {\n      case 'object':\n        return getColor[key];\n\n      case 'function':\n        return getColor(key);\n\n      default:\n        return getColor;\n    }\n  }\n\n  // Extract subset of streams from all variable streams\n  // Format stream data for render\n  _extractDataSeries({data, formatTitle, getY}) {\n    const series = [];\n    for (const key in data) {\n      const value = data[key];\n      if (Array.isArray(value)) {\n        const displayName = this.props.formatTitle(key);\n        const yExtent = extent(value, getY);\n        series.push({\n          key,\n          displayName,\n          color: this._getColor(key),\n          data: value,\n          extent: yExtent,\n          max: Math.max(Math.abs(yExtent[0]), Math.abs(yExtent[1]))\n        });\n      }\n    }\n\n    // Sort data series by max value\n    series.sort((s1, s2) => s2.max - s1.max);\n\n    return series;\n  }\n\n  // Check if a certain data series is turned on by user settings\n  _isDataVisible = key => {\n    const {showTopSeriesOnly, dataSeries, dataVisibility} = this.state;\n    if (dataVisibility[key] === false) {\n      // turned of by the user\n      return false;\n    }\n    if (showTopSeriesOnly) {\n      const {topSeriesCount} = this.props;\n      return dataSeries.findIndex(s => s.key === key) < topSeriesCount;\n    }\n    return true;\n  };\n\n  _setHoveredDataName = key => {\n    this.setState({hoveredSeriesName: key});\n  };\n\n  _toggleDataVisibility = key => {\n    const {dataVisibility} = this.state;\n\n    this.setState({\n      dataVisibility: {\n        ...dataVisibility,\n        // at start, all streams have undefined which is treated as visible\n        [key]: dataVisibility[key] === false\n      }\n    });\n  };\n\n  // Legends (also as visibility toggle) of the data streams\n  _renderDataFilters() {\n    const {dataSeries, showTopSeriesOnly, hoveredSeriesName} = this.state;\n    const {theme, style, topSeriesCount} = this.props;\n\n    const series = showTopSeriesOnly ? dataSeries.slice(0, topSeriesCount) : dataSeries;\n\n    return (\n      <FilterContainer theme={theme} userStyle={style.filter} isExpanded={!showTopSeriesOnly}>\n        {dataSeries.length > topSeriesCount && (\n          <FilterToggle\n            theme={theme}\n            userStyle={style.filterToggle}\n            isExpanded={!showTopSeriesOnly}\n            onClick={() => this.setState({showTopSeriesOnly: !showTopSeriesOnly})}\n          >\n            {showTopSeriesOnly\n              ? style.iconCollapsed || <CollapsedIcon />\n              : style.iconExpanded || <ExpandedIcon />}\n          </FilterToggle>\n        )}\n\n        {series.map(s => {\n          const styleProps = {\n            theme,\n            name: s.key,\n            displayName: s.displayName,\n            color: s.color,\n            isHovered: hoveredSeriesName === s.key,\n            isActive: this._isDataVisible(s.key)\n          };\n\n          return (\n            <FilterItem\n              userStyle={style.filterItem}\n              {...styleProps}\n              key={`multiplot-${s.key}`}\n              onMouseOver={() => this._setHoveredDataName(s.key)}\n              onMouseOut={() => this._setHoveredDataName(null)}\n              onClick={() => this._toggleDataVisibility(s.key)}\n            >\n              <FilterLegend {...styleProps} userStyle={style.filterLegend}>\n                {styleProps.isActive ? style.iconOn || <CheckAltIcon /> : style.iconOff}\n              </FilterLegend>\n              <span>{s.displayName}</span>\n            </FilterItem>\n          );\n        })}\n      </FilterContainer>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <MetricChart\n          {...this.props}\n          highlightSeries={this.state.hoveredSeriesName}\n          onSeriesMouseOver={key => this._setHoveredDataName(key)}\n          onMouseLeave={() => this._setHoveredDataName(null)}\n          dataFilter={this._isDataVisible}\n        />\n        {this._renderDataFilters()}\n      </div>\n    );\n  }\n}\n\nexport default withTheme(MetricChartWithLegends);\n"],"file":"rich-metric-chart.js"}