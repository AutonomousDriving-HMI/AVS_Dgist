"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DARK_THEME = exports.LIGHT_THEME = void 0;

var _lightThemePrimitives = _interopRequireDefault(require("./light-theme-primitives"));

var _darkThemePrimitives = _interopRequireDefault(require("./dark-theme-primitives"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var LIGHT_THEME = _objectSpread({}, _lightThemePrimitives.default, {
  /* Colors */
  background: _lightThemePrimitives.default.mono100,
  backgroundAlt: _lightThemePrimitives.default.mono200,
  backgroundInvert: _lightThemePrimitives.default.mono1000,
  controlColorPrimary: _lightThemePrimitives.default.mono600,
  controlColorSecondary: _lightThemePrimitives.default.mono500,
  controlColorHovered: _lightThemePrimitives.default.mono900,
  controlColorActive: _lightThemePrimitives.default.primary400,
  controlColorDisabled: _lightThemePrimitives.default.mono400,
  textColorPrimary: _lightThemePrimitives.default.mono900,
  textColorSecondary: _lightThemePrimitives.default.mono600,
  textColorInvert: _lightThemePrimitives.default.mono200,
  textColorDisabled: _lightThemePrimitives.default.mono500,
  textColorWarning: _lightThemePrimitives.default.warning400,
  textColorError: _lightThemePrimitives.default.negative400,

  /* Typography */
  fontFamily: _lightThemePrimitives.default.primaryFontFamily,
  fontSize: 12,
  fontWeight: 'normal',
  lineHeight: 1.5,

  /* Effects */
  transitionDuration: '300ms',
  transitionTimingFunction: 'ease',
  shadow: '0 2px 4px 0 rgba(0, 0, 0, 0.15)',

  /* Layout */
  controlSize: 18,
  spacingTiny: 4,
  spacingSmall: 8,
  spacingNormal: 12,
  spacingLarge: 24,
  spacingHuge: 48
});

exports.LIGHT_THEME = LIGHT_THEME;

var DARK_THEME = _objectSpread({}, _darkThemePrimitives.default, {
  /* Colors */
  background: _darkThemePrimitives.default.mono1000,
  backgroundAlt: _darkThemePrimitives.default.mono800,
  backgroundInvert: _darkThemePrimitives.default.mono100,
  controlColorPrimary: _darkThemePrimitives.default.mono400,
  controlColorSecondary: _darkThemePrimitives.default.mono500,
  controlColorHovered: _darkThemePrimitives.default.mono100,
  controlColorActive: _darkThemePrimitives.default.primary300,
  controlColorDisabled: _darkThemePrimitives.default.mono600,
  textColorPrimary: _darkThemePrimitives.default.mono100,
  textColorSecondary: _darkThemePrimitives.default.mono300,
  textColorInvert: _darkThemePrimitives.default.mono800,
  textColorDisabled: _darkThemePrimitives.default.mono500,
  textColorWarning: _darkThemePrimitives.default.warning300,
  textColorError: _darkThemePrimitives.default.negative300,

  /* Typography */
  fontFamily: _darkThemePrimitives.default.primaryFontFamily,
  fontSize: 12,
  lineHeight: 1.5,

  /* Effects */
  transitionDuration: '300ms',
  transitionTimingFunction: 'ease',
  shadow: '0 2px 4px 0 rgba(0, 0, 0, 0.15)',

  /* Layout */
  controlSize: 18,
  spacingTiny: 4,
  spacingSmall: 8,
  spacingNormal: 12,
  spacingLarge: 24,
  spacingHuge: 48
});

exports.DARK_THEME = DARK_THEME;
//# sourceMappingURL=index.js.map