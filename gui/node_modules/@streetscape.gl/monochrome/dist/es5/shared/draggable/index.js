"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _theme = require("../theme");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ContainerComponent = _styled.default.div(function (props) {
  return _objectSpread({
    margin: -props.tolerance,
    padding: props.tolerance,
    cursor: props.isActive ? 'grabbing' : props.isEnabled ? 'grab' : 'inherit'
  }, (0, _theme.evaluateStyle)(props.userStyle, props));
});

var BACKDROP_STYLES = {
  position: 'fixed',
  zIndex: 999,
  top: 0,
  left: 0,
  width: '100%',
  height: '100%'
};

function noop() {}
/**
 * @class
 */


var Draggable =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Draggable, _PureComponent);

  function Draggable(props) {
    var _this;

    _classCallCheck(this, Draggable);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Draggable).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_getEventData", function (evt) {
      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.state.offset;
      var _this$state = _this.state,
          dragStartPos = _this$state.dragStartPos,
          hasDragged = _this$state.hasDragged;
      var result = {
        srcEvent: evt,
        x: evt.clientX,
        y: evt.clientY,
        offsetX: evt.clientX - offset.left,
        offsetY: evt.clientY - offset.top,
        hasDragged: hasDragged
      };

      if (dragStartPos) {
        result.deltaX = result.x - dragStartPos.x;
        result.deltaY = result.y - dragStartPos.y;
      } else {
        result.deltaX = 0;
        result.deltaY = 0;
      }

      return result;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_onMouseDown", function (evt) {
      if (!_this.props.isEnabled) {
        return;
      }

      evt.stopPropagation();

      var offset = _this._element.getBoundingClientRect();

      var eventData = _this._getEventData(evt, offset);

      _this.setState({
        isMouseDown: true,
        hasDragged: false,
        offset: offset,
        dragStartPos: {
          x: eventData.x,
          y: eventData.y
        }
      });

      _this.props.onDragStart(eventData);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_onMouseMove", function (evt) {
      if (!_this.props.isEnabled) {
        return;
      }

      evt.stopPropagation();

      if (_this.state.isMouseDown) {
        var eventData = _this._getEventData(evt);

        var deltaX = eventData.deltaX,
            deltaY = eventData.deltaY;

        if (!_this.state.hasDragged) {
          if (deltaX || deltaY) {
            _this.setState({
              hasDragged: true
            });
          } else {
            return;
          }
        }

        _this.props.onDrag(eventData);
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_onMouseUp", function (evt) {
      if (_this.state.isMouseDown) {
        _this.setState({
          isMouseDown: false,
          dragStartPos: null
        });

        _this.props.onDragEnd(_this._getEventData(evt));
      }
    });

    _this.state = {
      isMouseDown: false,
      dragStartPos: null,
      hasDragged: false
    };
    return _this;
  }

  _createClass(Draggable, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          style = _this$props.style,
          isEnabled = _this$props.isEnabled,
          className = _this$props.className,
          tolerance = _this$props.tolerance;
      var isMouseDown = this.state.isMouseDown;
      return _react.default.createElement(ContainerComponent, {
        className: className,
        ref: function ref(_ref) {
          _this2._element = _ref;
        },
        tolerance: tolerance,
        isEnabled: isEnabled,
        isActive: isMouseDown,
        userStyle: style,
        onMouseDown: this._onMouseDown,
        onMouseMove: this._onMouseMove,
        onMouseLeave: this._onMouseUp,
        onMouseUp: this._onMouseUp
      }, isMouseDown && _react.default.createElement("div", {
        style: BACKDROP_STYLES
      }), this.props.children);
    }
  }]);

  return Draggable;
}(_react.PureComponent);

exports.default = Draggable;

_defineProperty(Draggable, "propTypes", {
  // container
  className: _propTypes.default.string,
  // config
  style: _propTypes.default.object,
  tolerance: _propTypes.default.number,
  isEnabled: _propTypes.default.bool,
  // callbacks
  onDragStart: _propTypes.default.func,
  onDrag: _propTypes.default.func,
  onDragEnd: _propTypes.default.func
});

_defineProperty(Draggable, "defaultProps", {
  className: '',
  isEnabled: true,
  tolerance: 0,
  onDragStart: noop,
  onDrag: noop,
  onDragEnd: noop
});
//# sourceMappingURL=index.js.map