{"version":3,"sources":["../../../src/builders/xviz-builder.js"],"names":["XVIZPoseBuilder","XVIZPrimitiveBuilder","XVIZFutureInstanceBuilder","XVIZUIPrimitiveBuilder","XVIZTimeSeriesBuilder","XVIZValidator","XVIZVariableBuilder","PRIMARY_POSE_STREAM","defaultValidateWarn","console","warn","defaultValidateError","error","XVIZBuilder","constructor","metadata","disableStreams","validateWarn","validateError","_validator","_streamBuilder","_poseBuilder","validator","_variablesBuilder","_primitivesBuilder","_futureInstanceBuilder","_uiPrimitivesBuilder","_timeSeriesBuilder","pose","streamId","stream","variable","primitive","futureInstance","timestamp","_timestamp","uiPrimitive","timeSeries","getFrame","getData","poses","primitives","futures","variables","uiPrimitives","data","future_instances","time_series","ui_primitives","frame","update_type","updates","_reset"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Note: XVIZ data structures use snake_case\n/* eslint-disable camelcase */\nimport XVIZPoseBuilder from './xviz-pose-builder';\nimport XVIZPrimitiveBuilder from './xviz-primitive-builder';\nimport XVIZFutureInstanceBuilder from './xviz-future-instance-builder';\nimport XVIZUIPrimitiveBuilder from './xviz-ui-primitive-builder';\nimport XVIZTimeSeriesBuilder from './xviz-time-series-builder';\nimport XVIZValidator from './xviz-validator';\nimport XVIZVariableBuilder from './xviz-variable-builder';\nimport {PRIMARY_POSE_STREAM} from './constant';\n\n/* global console */\n/* eslint-disable no-console */\nconst defaultValidateWarn = console.warn;\nconst defaultValidateError = console.error;\n/* eslint-enable no-console */\n\n// TODO: Builder could validate against stream metadata!\nexport default class XVIZBuilder {\n  constructor({\n    metadata = {},\n    disableStreams = [],\n    validateWarn = defaultValidateWarn,\n    validateError = defaultValidateError\n  } = {}) {\n    this._validator = new XVIZValidator({\n      validateWarn,\n      validateError\n    });\n\n    this.metadata = metadata;\n    this.disableStreams = disableStreams;\n\n    // Current streamBuilder\n    this._streamBuilder = null;\n\n    // Construct different builders\n    this._poseBuilder = new XVIZPoseBuilder({\n      metadata: this.metadata,\n      validator: this._validator\n    });\n    this._variablesBuilder = new XVIZVariableBuilder({\n      metadata: this.metadata,\n      validator: this._validator\n    });\n    this._primitivesBuilder = new XVIZPrimitiveBuilder({\n      metadata: this.metadata,\n      validator: this._validator\n    });\n    this._futureInstanceBuilder = new XVIZFutureInstanceBuilder({\n      metadata: this.metadata,\n      validator: this._validator\n    });\n    this._uiPrimitivesBuilder = new XVIZUIPrimitiveBuilder({\n      metadata: this.metadata,\n      validator: this._validator\n    });\n    this._timeSeriesBuilder = new XVIZTimeSeriesBuilder({\n      metadata: this.metadata,\n      validator: this._validator\n    });\n  }\n\n  pose(streamId = PRIMARY_POSE_STREAM) {\n    this._streamBuilder = this._poseBuilder.stream(streamId);\n    return this._streamBuilder;\n  }\n\n  variable(streamId) {\n    this._streamBuilder = this._variablesBuilder.stream(streamId);\n    return this._streamBuilder;\n  }\n\n  primitive(streamId) {\n    this._streamBuilder = this._primitivesBuilder.stream(streamId);\n    return this._streamBuilder;\n  }\n\n  futureInstance(streamId, timestamp) {\n    this._streamBuilder = this._futureInstanceBuilder.stream(streamId);\n    this._streamBuilder._timestamp(timestamp);\n    return this._streamBuilder;\n  }\n\n  uiPrimitive(streamId) {\n    this._streamBuilder = this._uiPrimitivesBuilder.stream(streamId);\n    return this._streamBuilder;\n  }\n\n  timeSeries(streamId) {\n    this._streamBuilder = this._timeSeriesBuilder.stream(streamId);\n    return this._streamBuilder;\n  }\n\n  /*\n  frame data:\n  {\n    update_type: 'snapshot',\n    updates: [{\n      timestamp,\n      poses: {'/vehicle-pose': {}, ...},\n      primitives: {},\n      variables: {},\n      future_instances: {}\n    }]\n  }\n   */\n  getFrame() {\n    const {poses} = this._poseBuilder.getData();\n\n    if (!poses || !poses[PRIMARY_POSE_STREAM]) {\n      this._validator.error(`Every frame requires a ${PRIMARY_POSE_STREAM} stream`);\n    }\n\n    const primitives = this._primitivesBuilder.getData();\n    const futures = this._futureInstanceBuilder.getData();\n    const variables = this._variablesBuilder.getData();\n    const timeSeries = this._timeSeriesBuilder.getData();\n    const uiPrimitives = this._uiPrimitivesBuilder.getData();\n\n    const data = {\n      timestamp: poses[PRIMARY_POSE_STREAM].timestamp,\n      poses\n    };\n\n    if (primitives) {\n      data.primitives = primitives;\n    }\n    if (futures) {\n      data.future_instances = futures;\n    }\n    if (variables) {\n      data.variables = variables;\n    }\n    if (timeSeries) {\n      data.time_series = timeSeries;\n    }\n    if (uiPrimitives) {\n      data.ui_primitives = uiPrimitives;\n    }\n\n    const frame = {\n      update_type: 'snapshot',\n      updates: [data]\n    };\n\n    return frame;\n  }\n\n  _reset() {\n    this._streamBuilder = null;\n  }\n}\n"],"file":"xviz-builder.js"}