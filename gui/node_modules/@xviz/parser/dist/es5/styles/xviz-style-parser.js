"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _stylesheet = _interopRequireDefault(require("./stylesheet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var EMPTY_STYLESHEET = new _stylesheet.default();
/* Parser for multiple stylesheets */

var XVIZStyleParser =
/*#__PURE__*/
function () {
  /**
   * @constructor
   * @param {Object} data - a map from stream name to stylesheet definition
   */
  function XVIZStyleParser(data) {
    _classCallCheck(this, XVIZStyleParser);

    this.stylesheets = {};

    for (var streamName in data) {
      this.stylesheets[streamName] = new _stylesheet.default(data[streamName]);
    }
  }
  /**
   * get stylesheet by stream name.
   * @param {String} streamName - name of the stream/stream
   * @returns {Stylesheet}
   */


  _createClass(XVIZStyleParser, [{
    key: "getStylesheet",
    value: function getStylesheet(streamName) {
      return this.stylesheets[streamName] || EMPTY_STYLESHEET;
    }
  }]);

  return XVIZStyleParser;
}();

exports.default = XVIZStyleParser;
//# sourceMappingURL=xviz-style-parser.js.map