{"version":3,"sources":["../../../src/synchronizers/log-slice.js"],"names":["getXVIZConfig","XVIZObject","findInsertPos","INSERT_POSITION","log","getTransformsFromPose","lookAheadTimesliceAccessor","timeslice","length","timestamp","warn","updateObjects","streamName","features","feature","xvizObject","get","id","_addFeature","LogSlice","constructor","streamFilter","lookAheadMs","streamsByReverseTime","variables","pointCloud","lookAheads","components","streams","initialize","getCurrentFrame","params","postProcessFrame","vehiclePose","OBJECT_STREAM","frame","resetAll","objects","getAllInCurrentFrame","filter","Object","keys","forEach","_includeStream","addStreamDatum","datum","setLabelsOnXVIZObjects","labels","variable","lookAheadTime","time","lookAheadIndex","RIGHT","console","undefined","label","object","labelName","_setProp","value","getStream","stream","defaultValue","streamData"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {getXVIZConfig} from '../config/xviz-config';\nimport XVIZObject from '../objects/xviz-object';\nimport {findInsertPos, INSERT_POSITION} from '../utils/search';\nimport log from '../utils/log';\n\nimport {getTransformsFromPose} from '../parsers/parse-vehicle-pose';\n\n// lookAheads is an array of arrays, so we need to fetch out the first\n// timestamp of the inner array.\nfunction lookAheadTimesliceAccessor(timeslice) {\n  if (timeslice && timeslice.length) {\n    return timeslice[0].timestamp;\n  }\n\n  log.warn('Missing entry or timestamp in lookAhead array')();\n  return 0;\n}\n\nfunction updateObjects(streamName, features) {\n  for (const feature of features) {\n    const xvizObject = XVIZObject.get(feature.id);\n    if (xvizObject) {\n      xvizObject._addFeature(streamName, feature);\n    }\n  }\n}\n\n// LOGSLICE CLASS\n\n// One time slice, one datum from each stream.\nexport default class LogSlice {\n  constructor(streamFilter, lookAheadMs, streamsByReverseTime) {\n    this.features = {};\n    this.variables = {};\n    this.pointCloud = null;\n    this.lookAheads = {};\n    this.components = {};\n    this.streams = {};\n\n    this.initialize(streamFilter, lookAheadMs, streamsByReverseTime);\n  }\n\n  // Extract car data from vehicle_pose and get geoJson for related frames\n  /* eslint-disable max-statements */\n  getCurrentFrame(params, postProcessFrame) {\n    const {vehiclePose} = params;\n    if (!vehiclePose) {\n      return null;\n    }\n\n    const {OBJECT_STREAM} = getXVIZConfig();\n\n    const frame = {\n      ...params,\n      ...getTransformsFromPose(vehiclePose),\n      vehiclePose,\n      features: this.features,\n      lookAheads: this.lookAheads,\n      variables: this.variables,\n      pointCloud: this.pointCloud,\n      components: this.components,\n      streams: this.streams\n    };\n\n    // OBJECTS\n    XVIZObject.resetAll();\n    if (postProcessFrame) {\n      postProcessFrame(frame);\n    }\n\n    // OBJECT_STREAM is deprecated, only keeping for backward compatibility\n    if (OBJECT_STREAM) {\n      updateObjects(OBJECT_STREAM, this.features[OBJECT_STREAM] || []);\n    } else {\n      for (const streamName in this.features) {\n        const features = this.features[streamName];\n        if (features.length && features[0].id) {\n          updateObjects(streamName, features);\n        }\n      }\n    }\n\n    frame.objects = XVIZObject.getAllInCurrentFrame(); // Map of XVIZ ids in current slice\n\n    return frame;\n  }\n  /* eslint-enable max-statements */\n\n  // HELPER METHODS\n\n  /**\n   * In-contrast to the per-stream post-processors,\n   * this function has the ability to look at and correlate data from multiple streams.\n   * Among other things parses XVIZ Object-related info from misc streams and merge into XVIZ\n   * feature properties.\n   */\n  initialize(streamFilter, lookAheadMs, streamsByReverseTime) {\n    const filter = streamFilter && Object.keys(streamFilter).length > 0 ? streamFilter : null;\n\n    // get data if we don't already have that stream && it is not filtered.\n    streamsByReverseTime.forEach(streams => {\n      for (const streamName in streams) {\n        if (!this.streams[streamName] && this._includeStream(filter, streamName)) {\n          this.addStreamDatum(streams[streamName], streamName, lookAheadMs, this);\n        }\n      }\n    });\n  }\n\n  /**\n   * Process a stream and put the appropriate data into\n   */\n  addStreamDatum(datum, streamName, lookAheadMs) {\n    this.streams[streamName] = datum;\n\n    this.setLabelsOnXVIZObjects(datum.labels);\n\n    const {features = [], lookAheads = [], variable, pointCloud = null} = datum;\n\n    // Future data is separate from features so we can control independently\n    if (lookAheads.length && lookAheadMs > 0) {\n      const lookAheadTime = datum.time + lookAheadMs;\n      const lookAheadIndex = findInsertPos(\n        lookAheads,\n        lookAheadTime,\n        INSERT_POSITION.RIGHT,\n        lookAheadTimesliceAccessor\n      );\n\n      if (lookAheadIndex) {\n        this.lookAheads[streamName] = lookAheads[lookAheadIndex - 1];\n      }\n    }\n\n    // Combine data from current datums\n    if (features.length) {\n      this.features[streamName] = features;\n    }\n\n    // Point cloud\n    if (pointCloud) {\n      if (this.pointCloud) {\n        console.warn(`Point cloud for ${streamName} overwriting previous cloud`); // eslint-disable-line\n      }\n      this.pointCloud = pointCloud;\n    }\n\n    if (variable !== undefined) {\n      this.variables[streamName] = variable;\n    }\n  }\n\n  setLabelsOnXVIZObjects(labels = []) {\n    // Sort labels by id\n    labels.forEach(label => {\n      const object = XVIZObject.get(label.id);\n      if (object && label.labelName) {\n        // Extract label name (acceleration, velocity etc.) from stream name\n\n        // For streams that do not follow the simple pattern in STREAM_REGEXP\n        // Lookup for exact matches for labels first.\n        object._setProp(label.labelName, label.value);\n      }\n    });\n  }\n\n  // Helper function to get a stream from data\n  // @param {Object} data - log data\n  // @param {String} stream - name of stream\n  // @param {*} defaultValue={} - return value in case stream is not present\n  // @return {Object} - contents of stream or defaultValue\n  getStream(stream, defaultValue = {}) {\n    const streamData = this.streams[stream];\n    if (!streamData) {\n      return defaultValue;\n    }\n    return streamData;\n  }\n\n  _includeStream(streamFilter, streamName) {\n    return !streamFilter || streamFilter[streamName];\n  }\n}\n"],"file":"log-slice.js"}