{"version":3,"sources":["../../../../src/shared/autosizer/index.js"],"names":["React","Component","PropTypes","AutoSizer","debounce","noop","SizeSensor","size","resize","props","onResize","debounceTime","render","_onResize","children","number"],"mappings":";;AAAA;;;;;AAKA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,IAAI,GAAG,MAAM,IAAnB;;AAEA,eAAe,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,uCAKpCM,IAAI,IAAI;AAClB,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYD,IAAZ;AACD,OAFD,MAEO,IAAI,KAAKE,KAAL,CAAWC,QAAf,EAAyB;AAAA,4BACG,KAAKD,KADR;AAAA,cACvBC,QADuB,eACvBA,QADuB;AAAA,cACbC,YADa,eACbA,YADa,EAE9B;;AACAD,QAAAA,QAAQ,CAACH,IAAD,CAAR,CAH8B,CAI9B;;AACA,aAAKC,MAAL,GAAcG,YAAY,GAAG,CAAf,GAAmBP,QAAQ,CAACM,QAAD,EAAWC,YAAX,CAA3B,GAAsDD,QAApE;AACD;AACF,KAf+C;AAAA;;AAiBhDE,EAAAA,MAAM,GAAG;AACP,WAAO,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKC;AAA1B,OAAsC,KAAKJ,KAAL,CAAWK,QAAX,IAAuBT,IAA7D,CAAP;AACD;;AAnB+C;;gBAA7BC,U,eACA;AACjBK,EAAAA,YAAY,EAAET,SAAS,CAACa;AADP,C","sourcesContent":["/**\n * This component detects resize of divs using\n * react-virtualized's AutoSizer\n * with some enhancements\n */\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport debounce from 'debounce';\n\nconst noop = () => null;\n\nexport default class SizeSensor extends Component {\n  static propTypes = {\n    debounceTime: PropTypes.number\n  };\n\n  _onResize = size => {\n    if (this.resize) {\n      this.resize(size);\n    } else if (this.props.onResize) {\n      const {onResize, debounceTime} = this.props;\n      // invoke callback immediately the first time\n      onResize(size);\n      // set up debounce for subsequent resize events\n      this.resize = debounceTime > 0 ? debounce(onResize, debounceTime) : onResize;\n    }\n  };\n\n  render() {\n    return <AutoSizer onResize={this._onResize}>{this.props.children || noop}</AutoSizer>;\n  }\n}\n"],"file":"index.js"}