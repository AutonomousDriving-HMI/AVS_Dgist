{"version":3,"sources":["../../../src/parsers/serialize.js"],"names":["LOG_STREAM_MESSAGE","getXVIZConfig","XVIZObject","preSerialize","message","observeObjects","objects","timestamp","features","forEach","f","observe","id","postDeserialize","type","TIMESLICE","OBJECT_STREAM","streams","streamName","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,SAAQA,kBAAR,QAAiC,cAAjC;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA;;;;AAGA,OAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AACpC,SAAOA,OAAP;AACD,C,CAED;AACA;;AACA,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,SAAjC,EAA4C;AAC1C,MAAID,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACE,QAAR,CAAiBC,OAAjB,CAAyBC,CAAC,IAAI;AAC5BR,MAAAA,UAAU,CAACS,OAAX,CAAmBD,CAAC,CAACE,EAArB,EAAyBL,SAAzB;AACD,KAFD;AAGD;AACF;AAED;;;;;;AAIA,OAAO,SAASM,eAAT,CAAyBT,OAAzB,EAAkC;AACvC,MAAIA,OAAO,CAACU,IAAR,KAAiBd,kBAAkB,CAACe,SAAxC,EAAmD;AACjD,WAAOX,OAAP;AACD;;AAHsC,yBAKfH,aAAa,EALE;AAAA,QAKhCe,aALgC,kBAKhCA,aALgC;;AAAA,QAMhCC,OANgC,GAMVb,OANU,CAMhCa,OANgC;AAAA,QAMvBV,SANuB,GAMVH,OANU,CAMvBG,SANuB,EAQvC;;AACA,MAAIS,aAAJ,EAAmB;AACjBX,IAAAA,cAAc,CAACY,OAAO,CAACD,aAAD,CAAR,EAAyBT,SAAzB,CAAd;AACA,WAAOH,OAAP;AACD;;AAED,OAAK,MAAMc,UAAX,IAAyBD,OAAzB,EAAkC;AAChC,UAAMX,OAAO,GAAGW,OAAO,CAACC,UAAD,CAAvB;;AACA,QAAIZ,OAAO,CAACE,QAAR,IAAoBF,OAAO,CAACE,QAAR,CAAiBW,MAArC,IAA+Cb,OAAO,CAACE,QAAR,CAAiB,CAAjB,EAAoBI,EAAvE,EAA2E;AACzEP,MAAAA,cAAc,CAACC,OAAD,EAAUC,SAAV,CAAd;AACD;AACF;;AACD,SAAOH,OAAP;AACD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Convert stream messages for safe transfer between threads\n */\nimport {LOG_STREAM_MESSAGE} from '../constants';\nimport {getXVIZConfig} from '../config/xviz-config';\nimport XVIZObject from '../objects/xviz-object';\n\n/**\n * placeholder\n */\nexport function preSerialize(message) {\n  return message;\n}\n\n// Populate global object metadata\n// ParseXVIZPrimitive did the same thing on the thread that it's run\nfunction observeObjects(objects, timestamp) {\n  if (objects) {\n    objects.features.forEach(f => {\n      XVIZObject.observe(f.id, timestamp);\n    });\n  }\n}\n\n/**\n * Restore message after deserialization (received via postMessage)\n * @params message {object} - received dehydrated message from other threads\n */\nexport function postDeserialize(message) {\n  if (message.type !== LOG_STREAM_MESSAGE.TIMESLICE) {\n    return message;\n  }\n\n  const {OBJECT_STREAM} = getXVIZConfig();\n  const {streams, timestamp} = message;\n\n  // OBJECT_STREAM is deprecated, only keeping for backward compatibility\n  if (OBJECT_STREAM) {\n    observeObjects(streams[OBJECT_STREAM], timestamp);\n    return message;\n  }\n\n  for (const streamName in streams) {\n    const objects = streams[streamName];\n    if (objects.features && objects.features.length && objects.features[0].id) {\n      observeObjects(objects, timestamp);\n    }\n  }\n  return message;\n}\n"],"file":"serialize.js"}